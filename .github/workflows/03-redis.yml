name: Nightly Redis
on:
  workflow_dispatch:
  schedule:
    - cron: '4 0 * * *'

jobs:
  redis:
    name:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        redis:
          - redis:alpine
          - eqalpha/keydb:latest
          - registry.redict.io/redict
          - docker.dragonflydb.io/dragonflydb/dragonfly
    services:
      database:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: root
        options: '--mount="type=tmpfs,destination=/var/lib/mysql" --health-cmd="mysqladmin ping -h 127.0.0.1" --health-interval=5s --health-timeout=2s --health-retries=3'
        ports:
          - "3306:3306"
      redis:
        image: ${{ matrix.redis }}
        ports:
          - "6379:6379"
    env:
      APP_ENV: test
      DATABASE_URL: mysql://root:root@127.0.0.1:3306/root
      APP_URL: http://localhost:8000
      APP_SECRET: def00000bb5acb32b54ff8ee130270586eec0e878f7337dc7a837acc31d3ff00f93a56b595448b4b29664847dd51991b3314ff65aeeeb761a133b0ec0e070433bff08e48
      REDIS_URL: redis://localhost:6379
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer Archives
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          coverage: none

      - name: Remove vendor-bin
        run: rm -rf vendor-bin

      - name: Setup Composer
        run: |
          composer install

      - name: Run PHPUnit
        run: |
          ./vendor/bin/phpunit --group=redis

