variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: "/certs"
    MYSQL_ROOT_PASSWORD: app
    WEB_DOCUMENT_ROOT: $CI_PROJECT_DIR/development/public
    GIT_STRATEGY: clone

stages:
    - Static analyzes
    - unit
    - E2E
    - Security
    - Build
    - Deploy

include:
    -   local: .gitlab/ci/sync.yml

default:
    image: shopware/development:latest
    before_script:
        - apt-install jq
        - export CI_DEV_BRANCH=$(echo $CI_COMMIT_REF_NAME | cut -d'+' -f2-)
        - zip -rq platform.zip .
        - git clone http://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.shopware.com/shopware/6/product/development.git
        - unzip -q platform.zip -d development/platform/
        - cd development
        - >
            if [ "$(git ls-remote origin $CI_DEV_BRANCH | wc -l)" == 1 ]; then
              echo "Development Branch: $CI_DEV_BRANCH (explicit)";
              git checkout $CI_DEV_BRANCH;
            elif [ "$(git ls-remote origin $CI_COMMIT_REF_NAME | wc -l)" == 1 ]; then
              echo "Development Branch: $CI_COMMIT_REF_NAME (implicit by same branch name)";
              git checkout $CI_COMMIT_REF_NAME;
            else
              export CI_TARGET_BRANCH_NAME=$(curl -LsS -H "PRIVATE-TOKEN: $CI_GITLAB_API_TOKEN" "https://gitlab.shopware.com/api/v4/projects/$CI_PROJECT_ID/merge_requests?source_branch=$CI_COMMIT_REF_NAME" | jq --raw-output ".[0].target_branch");
              if [ "$(git ls-remote origin $CI_TARGET_BRANCH_NAME | wc -l)" == 1 ]; then
                echo "Development Branch: $CI_TARGET_BRANCH_NAME (implicit by merge request target branch)";
                git checkout $CI_TARGET_BRANCH_NAME;
              else
                echo "Development Branch: master (fallback)";
              fi
            fi
        - cp -v dev-ops/gitlab/.psh.yaml.override .
        - /entrypoint supervisord > /dev/null 2>&1 &

# Stage: static

Javascript analyze:
    stage: Static analyzes
    before_script: []
    script:
        - cd src/Administration/Resources
        - npm clean-install
        - npm run lerna -- bootstrap
        - cd administration
        - PROJECT_ROOT=$(pwd) node_modules/.bin/eslint --ext .js,.vue --format junit src test > eslint.junit.xml
    artifacts:
        reports:
            junit: src/Administration/Resources/administration/eslint.junit.xml

PHP analyze:
    stage: Static analyzes
    services:
        -   name: mysql:5.7
            alias: mysql
    script:
        - ./psh.phar init
        - php dev-ops/analyze/generate-composer.php
        - php dev-ops/analyze/vendor/bin/php-cs-fixer fix --config=vendor/shopware/platform/.php_cs.dist --dry-run --format=junit | tee php-cs-fixer.xml
        - ./psh.phar static-analyze
    artifacts:
        reports:
            junit: php-cs-fixer.xml

# stage: unit
.phpunit_base:
    stage: unit
    needs: [PHP analyze]
    services:
        -   name: mysql:5.7
            alias: mysql
        -   name: elastic/elasticsearch:7.1.1
            alias: elasticsearch
            command: [ "bin/elasticsearch", "-Expack.security.enabled=false", "-Ediscovery.type=single-node" ]
    script:
        - ./psh.phar init
        - php -d pcov.enabled=1 -d pcov.directory=$CI_PROJECT_DIR
            vendor/bin/phpunit
            --configuration vendor/shopware/platform/phpunit.xml.dist
            --log-junit build/artifacts/phpunit.junit.xml
            --colors=never
            --coverage-clover build/artifacts/phpunit.clover.xml
            --coverage-html build/artifacts/phpunit-coverage-html
            --coverage-text=build/artifacts/phpunit-coverage-text
        - cat build/artifacts/phpunit-coverage-text | sed -e '/\\Shopware\\.*/d' -e '/\s*Methods:\s*\d*/d'

    coverage: '/^\s*Lines:\s*(\d+(?:\.\d+)?%)/'
    artifacts:
        paths:
            - development/build/artifacts/phpunit.clover.xml
        reports:
            junit: development/build/artifacts/phpunit.junit.xml

PHP 7.2:
    extends: .phpunit_base
    image: shopware/development:7.2
    stage: unit
    services:
        -   name: mysql:5.7
            alias: mysql
        -   name: elastic/elasticsearch:7.1.1
            alias: elasticsearch
            command: [ "bin/elasticsearch", "-Expack.security.enabled=false", "-Ediscovery.type=single-node" ]

PHP 7.3:
    extends: .phpunit_base
    image: shopware/development:7.3
    stage: unit
    services:
        -   name: mysql:5.7
            alias: mysql
        -   name: elastic/elasticsearch:7.1.1
            alias: elasticsearch
            command: [ "bin/elasticsearch", "-Expack.security.enabled=false", "-Ediscovery.type=single-node" ]

.PHP 7.4: # disabled until available
    allow_failure: true
    extends: .phpunit_base
    image: shopware/development:7.4
    stage: unit
    services:
        -   name: mysql:5.7
            alias: mysql
        -   name: elastic/elasticsearch:7.1.1
            alias: elasticsearch
            command: [ "bin/elasticsearch", "-Expack.security.enabled=false", "-Ediscovery.type=single-node" ]

MySQL 5.7:
    extends: .phpunit_base
    stage: unit
    services:
        -   name: mysql:5.7
            alias: mysql
        -   name: elastic/elasticsearch:7.1.1
            alias: elasticsearch
            command: [ "bin/elasticsearch", "-Expack.security.enabled=false", "-Ediscovery.type=single-node" ]

MySQL 8.0:
    extends: .phpunit_base
    stage: unit
    services:
        -   name: mysql:8.0
            alias: mysql
            command: ["mysqld", "--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci", "--default-authentication-plugin=mysql_native_password"]
        -   name: elastic/elasticsearch:7.1.1
            alias: elasticsearch
            command: [ "bin/elasticsearch", "-Expack.security.enabled=false", "-Ediscovery.type=single-node" ]


MariaDB 10.3:
    extends: .phpunit_base
    stage: unit
    services:
        -   name: mariadb:10.3
            alias: mysql
        -   name: elastic/elasticsearch:7.1.1
            alias: elasticsearch
            command: [ "bin/elasticsearch", "-Expack.security.enabled=false", "-Ediscovery.type=single-node" ]


MariaDB 10.4:
    extends: .phpunit_base
    stage: unit
    services:
        -   name: mariadb:10.4
            alias: mysql
        -   name: elastic/elasticsearch:7.1.1
            alias: elasticsearch
            command: [ "bin/elasticsearch", "-Expack.security.enabled=false", "-Ediscovery.type=single-node" ]


Administration (Jest):
    stage: unit
    needs: [Javascript analyze]
    services:
        -   name: mariadb:10.3
            alias: mysql
    script:
        - ./psh.phar init
        - ./psh.phar administration:install-dependencies
        - ./psh.phar administration:unit
    coverage: '/^\s?All files[^|]*\|[^|]*\s+([\d\.]+)/'
    artifacts:
        reports:
            junit: development/build/artifacts/administration.junit.xml

Storefront (Jest):
    stage: unit
    needs: [Javascript analyze]
    variables:
        PROJECT_ROOT: $CI_PROJECT_DIR/development
    services:
        -   name: mariadb:10.3
            alias: mysql
    script:
        - ./psh.phar init
        - ./psh.phar storefront:install-dependencies
        - npm --prefix vendor/shopware/platform/src/Storefront/Resources/ run unit
    coverage: '/^\s?All files[^|]*\|[^|]*\s+([\d\.]+)/'
    artifacts:
        reports:
            junit: development/build/artifacts/storefront.junit.xml

# Stage: e2e

.job_template: &e2e_definition
    stage: E2E
    needs: [Administration (Jest)]
    services:
        -   name: docker:18.09.7-dind
            alias: docker
        -   name: mariadb:10.3
            alias: mysql
    dependencies: []
    artifacts:
        when: always
        paths:
            - development/build/artifacts/e2e/
        reports:
            junit: development/build/artifacts/e2e/*.xml

.storefront_script:
    script:  &storefront_definition
        - ./psh.phar init --APP_ENV="prod"
        - ./psh.phar storefront:init --APP_ENV="prod" --DB_NAME="shopware_e2e"
        - ./psh.phar e2e:dump-db --APP_ENV="prod"
        - chown -R 1000:1000 .
        - docker run --name cypress -d -t --add-host="docker.vm:$(hostname -I)" -e CYPRESS_baseUrl=http://docker.vm:8000 -v $(pwd)/vendor/shopware/platform/src/Storefront/Resources/e2e:/e2e-Storefront -v $(pwd):/app cypress/browsers:node10.11.0-chrome75
        - docker exec cypress npm clean-install --prefix /e2e-Storefront
        - forever start vendor/shopware/platform/src/Storefront/Resources/e2e/routes/cypress.js
        - docker exec cypress npx cypress run --project /e2e-Storefront --browser chrome --config baseUrl=http://docker.vm:8000
        - docker rm -f cypress

.administration_script:
    script: &administration_definition
        - ./psh.phar init --APP_ENV="prod"
        - ./psh.phar administration:init --APP_ENV="prod"
        - ./psh.phar e2e:dump-db --APP_ENV="prod"
        - chown -R 1000:1000 .
        - docker run --name cypress -d -t --add-host="docker.vm:$(hostname -I)" -e CYPRESS_baseUrl=http://docker.vm:8000 -v $(pwd)/vendor/shopware/platform/src/Administration/Resources/e2e:/e2e-Administration -v $(pwd):/app cypress/browsers:node10.11.0-chrome75
        - docker exec cypress npm clean-install --prefix /e2e-Administration
        - forever start vendor/shopware/platform/src/Administration/Resources/e2e/routes/cypress.js
        - docker exec cypress npx cypress run --project /e2e-Administration --browser chrome --config baseUrl=http://docker.vm:8000 --config numTestsKeptInMemory=0 --spec $TEST_DIRECTORY
        - docker rm -f cypress

.mixed_script:
    script: &mixed_definition
        - ./psh.phar init --APP_ENV="prod"
        - ./psh.phar administration:init --APP_ENV="prod"
        - ./psh.phar storefront:init --APP_ENV="prod" --DB_NAME="shopware_e2e"
        - ./psh.phar e2e:dump-db --APP_ENV="prod"
        - chown -R 1000:1000 .
        - docker run --name cypress -d -t --add-host="docker.vm:$(hostname -I)" -e CYPRESS_baseUrl=http://docker.vm:8000 -v $(pwd)/vendor/shopware/platform/src/Administration/Resources/e2e:/e2e-Administration -v $(pwd):/app cypress/browsers:node10.11.0-chrome75
        - docker exec cypress npm clean-install --prefix /e2e-Administration
        - forever start vendor/shopware/platform/src/Administration/Resources/e2e/routes/cypress.js
        - docker exec cypress npx cypress run --project /e2e-Administration --browser chrome --config baseUrl=http://docker.vm:8000 --config numTestsKeptInMemory=0 --spec $TEST_DIRECTORY
        - docker rm -f cypress

Storefront:
    <<: *e2e_definition
    script: *storefront_definition
    needs: [Storefront (Jest)]

Administration (General):
    <<: *e2e_definition
    script: *administration_definition
    variables:
        TEST_DIRECTORY: e2e-Administration/cypress/integration/general/**/*

Administration (Catalogues):
    <<: *e2e_definition
    script: *administration_definition
    variables:
        TEST_DIRECTORY: e2e-Administration/cypress/integration/catalogue/**/*

Administration (Customer):
    <<: *e2e_definition
    script: *administration_definition
    variables:
        TEST_DIRECTORY: e2e-Administration/cypress/integration/customer/**/*

Administration (Orders):
    <<: *e2e_definition
    script: *administration_definition
    variables:
        TEST_DIRECTORY: e2e-Administration/cypress/integration/order/**/*

Administration (Content):
    <<: *e2e_definition
    script: *mixed_definition
    variables:
        TEST_DIRECTORY: e2e-Administration/cypress/integration/content/**/*

Administration (Rules):
    <<: *e2e_definition
    script: *administration_definition
    variables:
        TEST_DIRECTORY: e2e-Administration/cypress/integration/rule/**/*

Administration (Settings):
    <<: *e2e_definition
    script: *administration_definition
    variables:
        TEST_DIRECTORY: e2e-Administration/cypress/integration/settings/**/*

# Stage: security

RIPS security:
    stage: Security
    image: php:7.3-alpine
    before_script: []
    only:
        - master
    script:
        - apk add --no-cache libzip-dev && docker-php-ext-configure zip --with-libzip=/usr/include && docker-php-ext-install zip
        - wget https://github.com/rips/rips-cli/releases/download/3.2.0/rips-cli.phar -O /usr/bin/rips-cli
        - chmod 755 /usr/bin/rips-cli
        - rips-cli rips:scan:start -p . -t critical:0 -a ${RIPS_APP_ID} --progress

# Stage: build

Component Library:
    stage: Build
    image: node:10.8
    before_script: []
    dependencies: []
    variables:
        PROJECT_ROOT: $CI_PROJECT_DIR
    only:
        - master
    environment:
        name: Component Library
        url: https://component-library.shopware.com
    script:
        - npm install --prefix src/Administration/Resources/
        - npm run --prefix src/Administration/Resources lerna -- bootstrap
        - npm install --prefix src/Administration/Resources/nuxt-component-library/
        - npm run --prefix src/Administration/Resources/nuxt-component-library/ generate
    artifacts:
        paths:
            - build/artifacts/component-library/

# Stage: deploy

.Scrutinizer:
    stage: Deploy
    image: php:7.3-alpine
    allow_failure: true
    before_script: []
    only:
        - master
    dependencies:
        - PHPUnit (MySQL)
    script:
        - wget https://scrutinizer-ci.com/ocular.phar
        - php ocular.phar code-coverage:upload
            --repository="g/shopware/platform"
            --revision="$CI_COMMIT_SHA"
            --format=php-clover
            development/build/artifacts/phpunit.clover.xml

Upload Component Library:
    stage: Deploy
    image: python:latest
    before_script: []
    only:
        - master
    dependencies:
        - Component Library
    script:
        - pip install awscli
        - cd build/artifacts/component-library
        - aws s3 sync --delete --acl public-read . s3://shopware-ui-component-library-docs/
        - aws cloudfront create-invalidation --distribution-id E18U17118IAC82 --paths "/*"
