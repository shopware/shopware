stages:
    # linter and static analysis
    - lint
    # php and js unit tests
    - unit
    # cypress E2E tests
    - E2E
    # search for vulnerabilities in code and dependencies
    - security
    # build artifacts used in deploy
    - build
    # deploy artifacts build in the `build` stage
    - deploy
    # percy
    - visual

workflow:
    rules:
        # do not run on push
        -   if: '$CI_PIPELINE_SOURCE == "push"'
            when: never
        -   when: always

include:
    # include library files
    -   local: .gitlab/lib/rules.yml
    -   local: .gitlab/lib/datadog.yml
    # defines basic stuff and base templates
    -   local: .gitlab/base.yml
    # put your jobs into the matching stage file you want it to run
    -   local: .gitlab/stages/*.yml

#############################################################################
# Templates - start with one of these and put it in the matching stage file #
#############################################################################

# default template for jobs which should run on each MR/Pipeline
#.template-for-normal-jobs:
#    extends: .base
#    stage: lint
#    script:
#        # do your stuff here
#        - env
#
#.template-for-normal-jobs-with-custom-rules:
#    extends: .base
#    stage: lint
#    rules:
#        - !reference [.rules, skip]
#        - !reference [.rules, run]
#        - changes:
#              - '*.php' # only run if any .php files has changed or if not in MR context (scheduled for example)
#    script:
#        # do your stuff here
#        - env
#
## will only run if not in an merge request context or in merge trains
#.template-for-long-running-jobs:
#    extends: .long-running
#    stage: unit
#    script:
#        - env
#        - sleep 60
#
## will only run if not in an merge request context or in merge trains and the changes matches
#.template-for-long-running-jobs-with-custom-rules:
#    extends: .long-running
#    stage: unit
#    rules:
#        - !reference [.rules, skip]
#        - !reference [.rules, run]
#        - if: !reference [.rules, long-running, if]
#          changes:
#          - '*.php' # only run if any .php files has changed or if not in MR context (scheduled for example)
#    script:
#        - env
#        - sleep 60
