variables:
    MYSQL_ROOT_PASSWORD: app
    WEB_DOCUMENT_ROOT: $CI_PROJECT_DIR/public
    GIT_STRATEGY: clone
    GIT_DEPTH: 10
    LOG_STDOUT: $CI_PROJECT_DIR/var/log/stdout.log
    MYSQL_CMD: mysqld
    PROJECT_ROOT: $CI_PROJECT_DIR
    ADMIN_PATH: $CI_PROJECT_DIR/src/Administration/Resources/app/administration
    STOREFRONT_PATH: $CI_PROJECT_DIR/src/Storefront/Resources/app/storefront
    COMPOSER_PROCESS_TIMEOUT: 7200 # 60s * 60 * 2 = 2 hours
    DD_ENV: ci
    DATADOG_SITE: datadoghq.eu
    MYSQL_INITDB_SKIP_TZINFO: 1
    RUNNER_INSTANCE_TYPE: t3.medium
    DATABASE_URL: mysql://root:app@database:3306/root
    APP_URL: http://localhost:8000
    APP_SECRET: devsecret
    OPENSEARCH_URL: elasticsearch:9200
    BLUE_GREEN_DEPLOYMENT: 1
    NODE_VERSION: 18
    PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 'true'

# for jobs which should run on each MR/Pipeline
.base:
    image: shopware/development:8.1-composer-2
    # we want our base pipeline to finish fast
    timeout: 30m
    interruptible: true
    # do not download assets from previous stages by default
    dependencies: []
    tags:
        - $RUNNER_INSTANCE_TYPE
    rules:
        - !reference [.rules, skip]
        - !reference [.rules, run]
        - when: always
    before_script:
        - !reference [.scripts, install-node, script]
        - cp public/.htaccess.dist public/.htaccess
        - composer run setup
        - echo 'LogFormat "[httpd:access] %V:%p %h %l %u %t \"%r\" %>s bytesIn:%I bytesOut:%O reqTime:%{ms}T" dockerlog' > /opt/docker/etc/httpd/conf.d/20-custom-log.conf
        - SERVICE_PHPFPM_OPTS=--allow-to-run-as-root CONTAINER_UID=root /entrypoint supervisord > /dev/null 2>&1 &
    after_script:
        - !reference [.upload-junit-xml, after_script]

# sames as .base just without initializing shopware and starting a web server
.base-no-setup:
    extends: .base
    before_script: []

# only run in `merge_train`s or if the $CI_STAGE::all label is set
.long-running:
    extends: .base
    # this happens after the approve but before merge and may take longer
    timeout: 2h
    # do not download assets from previous stages by default
    dependencies: []
    rules:
        - !reference [.rules, skip]
        - if: !reference [.rules, run-allow-failure, if ]
          allow_failure: true
        - !reference [.rules, run]
        - if: !reference [.rules, long-running-allow-failure, if ]
          allow_failure: true
        - !reference [.rules, long-running]

# sames as .long-running just without initializing shopware and starting a web server
.long-running-no-setup:
    extends: .long-running
    before_script: []
