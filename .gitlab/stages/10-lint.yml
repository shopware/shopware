# yaml-language-server: $schema=https://gitlab.com/gitlab-org/gitlab/-/raw/master/app/assets/javascripts/editor/schema/ci.json
# requires /.gitlab/base.yml

Danger:
    extends: .base-no-setup
    stage: lint
    image:
        name: ghcr.io/shyim/danger-php:0.3.4
        entrypoint: [""]
    rules:
        - !reference [.rules, skip]
        - !reference [.rules, run]
        - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    before_script: []
    script:
        - danger ci

Prettier (Administration):
  extends: .base-with-node
  stage: lint
  rules:
    - !reference [.rules, skip]
    - !reference [.rules, run]
    - changes:
        - 'src/Administration/Resources/app/administration/**/*'
  before_script:
    - !reference [ .scripts, init, composer ]
    - !reference [ .scripts, init, npm, admin ]
  script:
    - cd src/Administration/Resources/app/administration
    - npm run format

ESLint (Administration):
    extends: .base-with-node
    stage: lint
    rules:
        - !reference [.rules, skip]
        - !reference [.rules, run]
        - changes:
              - 'src/Administration/Resources/app/administration/**/*'
    before_script:
      - !reference [ .scripts, init, composer ]
      - !reference [ .scripts, init, npm, admin ]
      - composer run admin:generate-entity-schema-types
    script:
        - cd src/Administration/Resources/app/administration
        - 'npm run lint -- --format junit --cache-location ${npm_config_cache}/eslint/admin --output-file $CI_PROJECT_DIR/eslint.junit.xml --plugin file-progress --rule "file-progress/activate: 0"'
        - npm run lint:types
    after_script:
        - grep 'failure message' eslint.junit.xml

ESLint (Acceptance Test Suite):
    extends: .base-no-setup
    stage: lint
    image: node:lts-alpine
    rules:
        - !reference [.rules, skip]
        - !reference [.rules, run]
        - changes:
              - 'tests/acceptance/**/*'
    script:
        - cd tests/acceptance
        - npm clean-install
        - npm run lint

Check eslint parser (Administration):
    extends: .base-with-node
    stage: lint
    rules:
        - if: '$CI_MERGE_REQUEST_EVENT_TYPE == "merge_train"'
          when: never
        - if: '$CI_PIPELINE_SOURCE == "pipeline"'
        - if: '$CI_PIPELINE_SOURCE == "schedule"'
    before_script:
      - !reference [ .scripts, init, composer ]
      - !reference [ .scripts, init, npm, admin ]
      - composer run admin:generate-entity-schema-types
    script:
        - cd src/Administration/Resources/app/administration
        - output=$(npm run lint:test-parser) || true
        - echo "$output"
        - if [[ "$output" =~ "16 problems (14 errors, 2 warnings)" ]]; then
            echo "Command failed as expected with the correct error message.";
            exit 0;
          else
            echo "Command did not produce the expected error message.";
            exit 1;
          fi

ESLint (Storefront):
    extends: .base-no-setup
    stage: lint
    image: node:lts-alpine
    rules:
        - !reference [.rules, skip]
        - !reference [.rules, run]
        - changes:
              - 'src/Storefront/Resources/app/storefront/**/*'
    script:
        - !reference [ .scripts, init, npm, storefront ]
        - cd src/Storefront/Resources/app/storefront
        - npm run --silent lint:js -- --format junit --cache-location ${npm_config_cache}/eslint/storefront --output-file $CI_PROJECT_DIR/eslint.junit.xml
    after_script:
        - grep 'failure message' eslint.junit.xml

ESLint (E2E):
  extends: .base-with-node
  stage: lint
  rules:
    - !reference [.rules, skip]
    - !reference [.rules, run]
    - changes:
        - 'tests/e2e/**/*'
  before_script:
    - !reference [ .scripts, init, composer ]
    - !reference [ .scripts, init, npm, e2e ]
  script:
    - cd tests/e2e
    - npm run lint -- --format junit --cache-location ${npm_config_cache}/eslint/e2e --output-file $CI_PROJECT_DIR/eslint.junit.xml
  after_script:
    - grep 'failure message' eslint.junit.xml

Stylelint (Administration):
    extends: .base-with-node
    stage: lint
    image: node:lts-alpine
    rules:
        - !reference [.rules, skip]
        - !reference [.rules, run]
        - changes:
              - 'src/Administration/Resources/app/administration/.stylelintrc'
              - 'src/Administration/Resources/app/administration/**/*.scss'
    before_script: []
    script:
        - !reference [ .scripts, init, npm, admin ]
        - cd src/Administration/Resources/app/administration
        - npm run lint:scss -- --custom-formatter 'node_modules/stylelint-junit-formatter' --output-file stylelint.junit.xml

Stylelint (Storefront):
    extends: .base-no-setup
    stage: lint
    image: node:lts-alpine
    rules:
        - !reference [.rules, skip]
        - !reference [.rules, run]
        - changes:
              - 'src/Storefront/Resources/app/storefront/stylelint.config.js'
              - 'src/Storefront/Resources/app/storefront/**/*.scss'
    script:
        - !reference [ .scripts, init, npm, storefront ]
        - cd src/Storefront/Resources/app/storefront
        - npm run lint:scss -- --custom-formatter 'node_modules/stylelint-junit-formatter' --output-file stylelint.junit.xml

PHP static analysis:
    extends: .base-no-setup
    variables:
        GIT_DEPTH: 0
    stage: lint
    rules:
        - if: '$CI_COMMIT_BRANCH == "trunk"'
          when: never
        - !reference [.rules, skip]
        - !reference [.rules, run]
        - changes:
              - phpstan.neon.dist
              - composer.json
              - phpstan-baseline.neon
              - '**/*.php'
    before_script:
        - !reference [ .scripts, init, composer ]
        - composer run framework:schema:dump
    script:
        - composer run phpstan -- --error-format=gitlab -vvv | tee phpstan-report.json

PHP lint:
    extends: .base-no-setup
    variables:
        GIT_STRATEGY: clone
        GIT_DEPTH: 0
    stage: lint
    rules:
        - !reference [.rules, skip]
        - !reference [.rules, run]
        - changes:
              - composer.json
              - 'changelog/**/*.md'
              - 'src/**/snippet/**/*.json'
              - '**/*.php'
    before_script:
        - !reference [ .scripts, init, composer_full ]
    script:
        - composer run ecs
        - composer run lint:changelog
        - composer run lint:snippets
        - ./bin/console sync:composer:version --dry-run
        # Proper BC check for one major cycle
        - composer run bc-check

# MR based BC checker used during a new major release phase
BC check MR:
 extends: PHP lint
 rules:
   - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == null'
     when: never
   - !reference [.rules, skip]
   - !reference [.rules, run]
   - if: '$CI_MERGE_REQUEST_LABELS =~ /.*removes_deprecations.*/'
     allow_failure: true
     changes:
         - composer.json
         - 'changelog/**/*.md'
         - 'src/**/snippet/**/*.json'
         - '**/*.php'
   - changes:
         - composer.json
         - 'changelog/**/*.md'
         - 'src/**/snippet/**/*.json'
         - '**/*.php'
 script:
       - composer run bc-check -- --from=origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME

Twig lint (storefront):
  extends: .base-no-setup
  stage: lint
  allow_failure: true
  image:
    name: maltejanz/ludtwig:0.8.3
  rules:
    - changes:
      - 'src/Storefront/Resources/views/ludtwig-config.toml'
      - 'src/Storefront/Resources/views/.ludtwig-ignore'
      - 'src/Storefront/Resources/views/**/*.twig'
  script:
    - cd ./src/Storefront/Resources/views
    - ludtwig .
    - ludtwig --version
    - echo "If you want to run this locally install https://github.com/MalteJanz/ludtwig in the version above"
    - echo "And then composer run ludtwig:storefront or ludtwig:storefront:fix"

NPM CI:
    extends: .base-no-setup
    stage: lint
    image: node:$NODE_IMAGE_TAG
    rules:
        - !reference [ .rules, skip ]
        - !reference [ .rules, run ]
        - changes:
            - 'src/Administration/Resources/app/administration/package*.json'
            - 'src/Storefront/Resources/app/storefront/package*.json'
    before_script: []
    script:
        - cd $JS_APP_DIR
        - npm ci --no-audit
    parallel:
      matrix:
        - JS_APP_DIR: "src/Administration/Resources/app/administration/"
          NODE_IMAGE_TAG:
          - "lts-alpine"
          - "20-alpine"
        - JS_APP_DIR: "src/Storefront/Resources/app/storefront/"
          NODE_IMAGE_TAG:
            - "lts-alpine"
            - "20-alpine"
