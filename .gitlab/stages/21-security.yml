# requires /.gitlab/base.yml

Symfony security check:
    extends: .long-running
    stage: unit
    needs: []
    image: shopware/development:7.4-composer-2
    before_script: []
    script:
        - composer install --no-interaction --no-scripts
        - curl --location --output local-php-security-checker https://github.com/fabpot/local-php-security-checker/releases/download/v1.0.0/local-php-security-checker_1.0.0_linux_amd64
        - echo 'e5b12488ca78bc07c149e9352278bf10667b88a8461caac10154f9a6f5476369  local-php-security-checker' > local-php-security-checker.sha256
        - sha256sum --check local-php-security-checker.sha256
        - chmod +x local-php-security-checker
        - ./local-php-security-checker
        - composer install --no-interaction --no-scripts -d src/Recovery
        - ./local-php-security-checker --path=src/Recovery

# NEXT-16696 - deactivated because it always fails
.NPM security check:
    extends: .long-running
    stage: security
    image: shopware/development:7.4-composer-2
    dependencies: []
    allow_failure: true
    before_script: []
    script:
        - cd src/Administration/Resources/app/administration
        - npm i
        - npm install --save-dev audit-ci
        - node node_modules/.bin/audit-ci --moderate --allowlist http-proxy elliptic
        - cd ../../../../../src/Storefront/Resources/app/storefront
        - npm i
        - npm install --save-dev audit-ci
        - node node_modules/.bin/audit-ci --moderate --allowlist dot-prop http-proxy acorn jquery elliptic

.sonarqube-check:
    extends: .long-running
    stage: security
    image:
        name: sonarsource/sonar-scanner-cli:latest
        entrypoint: [""]
    before_script: []
    dependencies: []
    variables:
        SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
        GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
    cache:
        key: "${CI_JOB_NAME}"
        paths:
            - .sonar/cache
    rules:
        - if: '$CI_MERGE_REQUEST_LABELS =~ /.*security::skip.*/'
          when: never
        - if: '$CI_MERGE_REQUEST_LABELS =~ /.*security::all.*/'
        - when: manual
        - if: '$CI_COMMIT_BRANCH == "trunk"'
        - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    allow_failure: true
    script:
        - sonar-scanner
    artifacts:
        when: always
        paths:
            - cobertura.xml
            - development/build/artifacts/phpunit.junit.xml
