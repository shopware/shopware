# requires /.gitlab/base.yml

# performance stage - This files contains all jobs belonging to the performance stage.

Lighthouse (Administration):
    extends: .base-with-node
    stage: unit
    needs: [ Build, 'Jest (Administration)' ]
    dependencies: [ Build ]
    services:
        -   name: mariadb:10.11
            alias: database
    variables:
      # Use e2e env to deactivate the admin queue worker
      APP_ENV: e2e
      DD_API_KEY: "$DATADOG_API_KEY"
      PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: ''
    rules:
        - !reference [ .rules, skip ]
        # only run on protected refs like trunk and the version branches, if it's not a merge request
        - if: '$CI_PIPELINE_SOURCE != "merge_request_event" && $CI_COMMIT_REF_PROTECTED == "true"'
          allow_failure: true
    script:
      - !reference [ .scripts, init, npm, admin ]
      - APP_ENV=prod bin/console framework:demodata
      - APP_ENV=prod bin/console dal:refresh:index
      - cd $ADMIN_PATH
      - node createlighthouserc.js
      - node node_modules/@lhci/cli/src/cli.js collect --config=$PROJECT_ROOT/build/artifacts/lighthouse-admin-config/general.json
      - node lighthouse-tests.js
      - node node_modules/@lhci/cli/src/cli.js upload --config=$PROJECT_ROOT/build/artifacts/lighthouse-admin-config/general.json
    artifacts:
        when: always
        paths:
            - build/artifacts

Lighthouse Server (Storefront):
    extends: .base-with-node
    stage: unit
    needs: [ Build, 'Jest (Storefront)' ]
    dependencies: [ Build ]
    allow_failure: true
    timeout: 1h
    services:
        -   name: mariadb:10.11
            alias: database
    variables:
        APP_ENV: prod
        DD_API_KEY: "$DATADOG_API_KEY"
        ALLOW_FAILURE: 'true'
        PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: ''
    rules:
        - !reference [ .rules, skip ]
        # only run on protected refs like trunk and the version branches, if it's not a merge request
        - if: '$CI_PIPELINE_SOURCE != "merge_request_event" && $CI_COMMIT_REF_PROTECTED == "true"'
          allow_failure: true
    before_script: []
    script:
        - !reference [ .scripts, init, npm, storefront ]
        - APP_ENV=prod bin/console framework:demodata
        - APP_ENV=prod bin/console dal:refresh:index
        - cd $STOREFRONT_PATH
        - node createlighthouserc.js
        - node node_modules/@lhci/cli/src/cli.js collect --config=$PROJECT_ROOT/build/artifacts/lighthouse-storefront-config/lighthousercNotLoggedIn.json
        - node node_modules/@lhci/cli/src/cli.js collect --additive=true --config=$PROJECT_ROOT/build/artifacts/lighthouse-storefront-config/lighthousercNotLoggedInMobile.json
        - node node_modules/@lhci/cli/src/cli.js collect --additive=true --config=$PROJECT_ROOT/build/artifacts/lighthouse-storefront-config/lighthousercLoggedIn.json
        - node node_modules/@lhci/cli/src/cli.js collect --additive=true --config=$PROJECT_ROOT/build/artifacts/lighthouse-storefront-config/lighthousercLoggedInMobile.json
        - node lighthouse-tests.js
        - node node_modules/@lhci/cli/src/cli.js upload --config=$PROJECT_ROOT/build/artifacts/lighthouse-storefront-config/lighthousercNotLoggedIn.json
    artifacts:
        when: always
        paths:
            - build/artifacts
