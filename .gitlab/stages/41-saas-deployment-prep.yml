---

.rules_deployment_preparation: &rules_deployment_preparation
  - !reference [ .rules, skip-in-merge-train ]
  - !reference [ .rules, skip ]
  - if: '$CI_PREPARE_SAAS_DEPLOYMENT == "true"'

compile deployment info:
  extends: .base-no-setup
  stage: downstream
  image: 'debian:11-slim'
  needs: [ ]
  rules:
    - *rules_deployment_preparation
  script:
    - export DEPLOYMENT_BRANCH_NAME=$(date --utc +'saas/%Y/%W') # FIXME: Use `-d ${CI_PIPELINE_CREATED_AT}` here, to have a more direct relation between branch name and schedule.
    - |
      cat <<EOF > deployment.env
      DEPLOYMENT_BRANCH_NAME=${DEPLOYMENT_BRANCH_NAME}
      CI_UPDATE_DEPENDENCY=1
      CUSTOM_VERSION=shopware/platform:dev-${DEPLOYMENT_BRANCH_NAME} as 6.5.x-dev;shopware/commercial:dev-${DEPLOYMENT_BRANCH_NAME};swag/saas-rufus:dev-${DEPLOYMENT_BRANCH_NAME}
      GITLAB_MR_TITLE=Deployment - ${DEPLOYMENT_BRANCH_NAME}
      GITLAB_MR_DESCRIPTION_TEXT=This MR has been created automatically to facilitate the deployment \`${DEPLOYMENT_BRANCH_NAME}\`.
      GITLAB_MR_LABELS=workflow::development,pipeline:integration
      GITLAB_MR_ASSIGNEES=shopwarebot
      EOF
  artifacts:
    paths:
      - deployment.env
    reports:
      dotenv: deployment.env

create downstream deployment branch:
  extends: .base-no-setup
  stage: downstream
  image: 'curlimages/curl:7.72.0'
  needs:
    - job: 'compile deployment info'
      artifacts: true
  rules:
    - *rules_deployment_preparation
  script:
    - export DEPLOYMENT_BRANCH_NAME=$(date --utc +'saas/%Y/%W') # FIXME: $DEPLOYMENT_BRANCH_NAME should be set already, but it's not. This is likely a bug in Gitlab-CI.
    - .gitlab/bin/branch.sh create_deployment_branch "${PROJECT_PATH}" "${DEPLOYMENT_BRANCH_NAME}"
  parallel:
    matrix:
      - PROJECT_PATH:
          - 'shopware%2F6%2Fproduct%2Fcommercial'
          - 'shopware%2F6%2Fproduct%2Frufus'
          - 'shopware%2F6%2Fproduct%2Fplatform'

create deployment merge request:
  stage: downstream
  needs:
    - job: 'compile deployment info'
      artifacts: true
    - job: 'create downstream deployment branch'
      artifacts: false
  rules:
    - *rules_deployment_preparation
  variables:
    DEPLOYMENT_BRANCH_NAME: '${DEPLOYMENT_BRANCH_NAME}'
    CI_UPDATE_DEPENDENCY: '${CI_UPDATE_DEPENDENCY}'
    CUSTOM_VERSION: '${CUSTOM_VERSION}'
    GITLAB_MR_TITLE: '${GITLAB_MR_TITLE}'
    GITLAB_MR_DESCRIPTION_TEXT: '${GITLAB_MR_DESCRIPTION_TEXT}'
    GITLAB_MR_LABELS: '${GITLAB_MR_LABELS}'
    GITLAB_MR_ASSIGNEES: '${GITLAB_MR_ASSIGNEES}'
  inherit:
    default: false
    variables:
      - DEPLOYMENT_BRANCH_NAME
      - CI_UPDATE_DEPENDENCY
      - CUSTOM_VERSION
      - GITLAB_MR_TITLE
      - GITLAB_MR_DESCRIPTION_TEXT
      - GITLAB_MR_LABELS
      - GITLAB_MR_ASSIGNEES
  allow_failure: false
  trigger:
    project: 'shopware/6/product/saas'
    branch: 'trunk'
    strategy: 'depend'
