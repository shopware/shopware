split repository:
  stage: split
  tags:
    - shopware
  image:
    name: bitnami/git:2
  needs: [ ]
  rules:
    - !reference [ .rules, skip ]
    - !reference [ .rules, run ]
    - if: '$CI_COMMIT_REF_PROTECTED == "true"'
  cache:
    - key: '${CI_COMMIT_BRANCH}${CI_COMMIT_TAG}${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}-.splitsh.db.bak'
      paths: [ '.splitsh.db.bak' ]
  variables:
    SPLITSH_ARCHIVE_URL: 'https://github.com/splitsh/lite/releases/download/v1.0.1/lite_linux_amd64.tar.gz'
    GIT_DEPTH: '0'
  before_script:
    - .gitlab/bin/split.sh fetch_splitsh "${SPLITSH_ARCHIVE_URL}"
  script:
    - >
        for package in Administration Storefront Core Elasticsearch; do
          .gitlab/bin/split.sh split_repo "${package}"
        done
  artifacts:
    when: on_success
    paths:
      - '${CI_PROJECT_DIR}/repos'
      - '${CI_PROJECT_DIR}/.splitsh.db.bak'

add assets to split repositories:
  stage: split
  tags:
    - shopware
  image:
    name: bitnami/git:2
  needs:
    - job: 'Build'
    - job: 'split repository'
  rules:
    - !reference [ .rules, skip ]
    - if: '$CI_COMMIT_REF_PROTECTED == "true" && $CI_COMMIT_TAG != null'
  variables:
    GIT_AUTHOR_EMAIL: 'shopwarebot@shopware.com'
    GIT_AUTHOR_NAME: 'shopwareBot'
    GIT_COMMITTER_EMAIL: 'shopwarebot@shopware.com'
    GIT_COMMITTER_NAME: 'shopwareBot'
  before_script: [ ]
  script:
    - >
      for package in Administration Storefront Core Elasticsearch; do
        .gitlab/bin/split.sh copy_assets "${package}"
      done
    - .gitlab/bin/split.sh check_assets
    - .gitlab/bin/split.sh include_admin_assets
    - .gitlab/bin/split.sh include_storefront_assets
    - >
      for package in Administration Storefront Core Elasticsearch; do
        .gitlab/bin/split.sh commit "${package}" "${CI_COMMIT_TAG_MESSAGE} (+ assets)"
      done
  artifacts:
    when: on_success
    paths:
      - '${CI_PROJECT_DIR}/repos'

tag split repositories:
  stage: split
  tags:
    - shopware
  image:
    name: bitnami/git:2
  needs:
    - job: 'add assets to split repositories'
  rules:
    - !reference [ .rules, skip ]
    - if: '$CI_COMMIT_TAG'
  variables:
    GIT_AUTHOR_EMAIL: 'shopwarebot@shopware.com'
    GIT_AUTHOR_NAME: 'shopwareBot'
    GIT_COMMITTER_EMAIL: 'shopwarebot@shopware.com'
    GIT_COMMITTER_NAME: 'shopwareBot'
  script:
    - >
      for package in Administration Storefront Core Elasticsearch; do
        .gitlab/bin/split.sh tag "${package}" "${CI_COMMIT_TAG}"
      done
  artifacts:
    when: on_success
    paths:
      - '${CI_PROJECT_DIR}/repos'
