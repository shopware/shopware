split repository:
  stage: split
  tags:
    - shopware
  image:
    name: alpine
  needs: [ ]
  rules:
    - !reference [ .rules, skip-in-merge-train ]
    - !reference [ .rules, skip ]
    - !reference [ .rules, run ]
    - if: '$CI_COMMIT_REF_PROTECTED == "true" && ($CI_PIPELINE_SOURCE == "schedule" || $CI_COMMIT_TAG != null)'
  variables:
    SPLITSH_ARCHIVE_URL: 'https://github.com/splitsh/lite/releases/download/v1.0.1/lite_linux_amd64.tar.gz'
    GIT_DEPTH: '0'
  before_script: []
  script:
    - apk add git git-subtree
    - >
        for package in Administration Storefront Core Elasticsearch; do
          .gitlab/bin/split.sh split_repo "${package}"
        done
  artifacts:
    when: on_success
    paths:
      - '${CI_PROJECT_DIR}/repos'

add assets to split repositories:
  stage: split
  tags:
    - shopware
  image:
    name: bitnami/git:2
  needs:
    - job: 'Build'
    - job: 'split repository'
  rules: &rules-tag
    - !reference [ .rules, skip-in-merge-train ]
    - !reference [ .rules, skip ]
    - !reference [ .rules, run ]
    - if: '$CI_COMMIT_REF_PROTECTED == "true" && $CI_COMMIT_TAG != null'
  variables:
    GIT_AUTHOR_EMAIL: 'shopwarebot@shopware.com'
    GIT_AUTHOR_NAME: 'shopwareBot'
    GIT_COMMITTER_EMAIL: 'shopwarebot@shopware.com'
    GIT_COMMITTER_NAME: 'shopwareBot'
  before_script: [ ]
  script:
    - >
      for package in Administration Storefront Core Elasticsearch; do
        .gitlab/bin/split.sh copy_assets "${package}"
      done
    - .gitlab/bin/split.sh check_assets
    - .gitlab/bin/split.sh include_admin_assets
    - .gitlab/bin/split.sh include_storefront_assets
  artifacts:
    when: on_success
    paths:
      - '${CI_PROJECT_DIR}/repos'

require core version:
  stage: split
  tags:
    - shopware
  image:
    name: composer:2.5
  needs:
    - job: 'add assets to split repositories'
  rules:
    - *rules-tag
  script:
    - >
      for package in Administration Storefront Core Elasticsearch; do
        .gitlab/bin/split.sh require_core_version "${package}" "${CI_COMMIT_TAG:-dev-tmp-${CI_COMMIT_SHORT_SHA}}"
      done
  artifacts:
    when: on_success
    paths:
      - '${CI_PROJECT_DIR}/repos'

tag split repositories:
  stage: split
  tags:
    - shopware
  image:
    name: bitnami/git:2
  needs:
    - job: 'require core version'
  rules:
    - !reference [ .rules, skip-in-merge-train ]
    - !reference [ .rules, skip ]
    - if: '$CI_COMMIT_REF_PROTECTED == "true" && $CI_COMMIT_TAG != null'
  variables:
    GIT_AUTHOR_EMAIL: 'shopwarebot@shopware.com'
    GIT_AUTHOR_NAME: 'shopwareBot'
    GIT_COMMITTER_EMAIL: 'shopwarebot@shopware.com'
    GIT_COMMITTER_NAME: 'shopwareBot'
  script:
    - >
      for package in Administration Storefront Core Elasticsearch; do
        .gitlab/bin/split.sh commit "${package}" "${CI_COMMIT_TAG} (+ assets)"
      done
    - >
      for package in Administration Storefront Core Elasticsearch; do
        .gitlab/bin/split.sh tag "${package}" "${CI_COMMIT_TAG}"
      done
  artifacts:
    when: on_success
    paths:
      - '${CI_PROJECT_DIR}/repos'

branch split repositories:
  extends: 'tag split repositories'
  rules:
    - !reference [ .rules, skip-in-merge-train ]
    - !reference [ .rules, skip ]
    - if: '$CI_COMMIT_TAG != null'
      when: never
    - !reference [ .rules, run ]
  script:
    - >
      for package in Administration Storefront Core Elasticsearch; do
        .gitlab/bin/split.sh commit "${package}" "tmp-${CI_COMMIT_SHORT_SHA} (+ assets)"
      done
    - >
      for package in Administration Storefront Core Elasticsearch; do
        .gitlab/bin/split.sh branch "${package}" "tmp-${CI_COMMIT_SHORT_SHA}"
      done
