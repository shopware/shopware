# requires /.gitlab/base.yml

Upload Component Library:
    extends: .long-running-no-setup
    stage: deploy
    image: python:latest
    rules:
        - if: '$CI_COMMIT_BRANCH == "trunk" && $CI_PIPELINE_SOURCE == "schedule"'
          when: manual
          allow_failure: true
    dependencies:
        - Component Library
    environment:
        name: Component Library
        url: https://component-library.shopware.com
    script:
        - pip install awscli
        - cd build/artifacts/component-library
        - aws s3 sync --delete --acl public-read . s3://shopware-ui-component-library-docs/
        - aws cloudfront create-invalidation --distribution-id E18U17118IAC82 --paths "/*"
    interruptible: false

Publish entity-schema-types NPM package:
    extends: .base
    stage: deploy
    rules:
      - if: '$CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED == "true"'
    before_script:
      - !reference [ .scripts, init, composer ]
      - !reference [ .scripts, install-node, script ]
      - !reference [ .scripts, init, npm, admin ]
      - composer run admin:generate-entity-schema-types
    script:
      - cd src/Administration/Resources/app/administration
      - npm run generate-entity-schema-package
      - cd ./entity-schema-types
      - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
      - npm publish --access public

github sync:
    extends: .long-running-no-setup
    stage: deploy
    image: ubuntu:rolling
    needs: []
    rules:
      # only sync on protected branches
      - if: '$CI_COMMIT_REF_PROTECTED == "true"'
    environment:
        name: Github
        url: https://github.com/shopware
    variables:
        GIT_STRATEGY: clone
        GIT_DEPTH: "0"  # Tells git to fetch all commits
    script:
      - apt update && apt install -y git
      - git remote add github https://${GITHUB_SYNC_USER}:${GITHUB_SYNC_TOKEN}@github.com/shopware/platform
      - git fetch github
      - .gitlab/bin/git_sync.bash origin github

push split repositories:
  stage: deploy
  tags:
    - shopware
  image:
    name: bitnami/git:2
  needs:
    - job: 'split repository'
    - job: 'tag split repositories'
      optional: true
  rules:
    - !reference [ .rules, skip ]
    - if: '$CI_COMMIT_REF_PROTECTED == "true" && ($CI_PIPELINE_SOURCE == "schedule" || $CI_COMMIT_TAG != null)'
  variables:
    REMOTE_BASE_URL_GITLAB: "https://bot:${PERSONAL_TOKEN}@gitlab.shopware.com/shopware/6/product/many-repositories"
    REMOTE_BASE_URL_GITHUB: "https://${GITHUB_SYNC_USER}:${GITHUB_SYNC_TOKEN}@github.com/shopware"
  script:
    - >
      for package in Administration Storefront Core Elasticsearch; do
        .gitlab/bin/split.sh push "${package}" "${REMOTE_BASE_URL_GITLAB}" "${CI_COMMIT_BRANCH}${CI_COMMIT_TAG}"
        .gitlab/bin/split.sh push "${package}" "${REMOTE_BASE_URL_GITHUB}" "${CI_COMMIT_BRANCH}${CI_COMMIT_TAG}"
      done

deploy to cloud staging:
    stage: deploy
    when: manual
    inherit:
        variables: false
    trigger: shopware/6/product/saas
    variables:
        VERSION_ORIGIN_REF: '$CI_MERGE_REQUEST_PROJECT_PATH!$CI_MERGE_REQUEST_IID'
        CUSTOM_VERSION: 'shopware/platform:dev-${CI_COMMIT_BRANCH}${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME} as 6.4.x-dev;swag/saas-rufus:dev-trunk'
