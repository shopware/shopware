includes:
    - phpstan-baseline.neon
    - phpstan-v66-baseline.neon
    - vendor/phpstan/phpstan/conf/bleedingEdge.neon
    - src/Core/DevOps/StaticAnalyze/PHPStan/extension.neon
    - src/Core/DevOps/StaticAnalyze/PHPStan/rules.neon
    - src/Core/DevOps/StaticAnalyze/PHPStan/core-rules.neon

parameters:
    phpVersion: 80200
    level: 8
    treatPhpDocTypesAsCertain: false
    checkMissingIterableValueType: true
    inferPrivatePropertyTypeFromConstructor: true
    reportUnmatchedIgnoredErrors: true # Could be set to false if necessary during PHPStan update
    tmpDir: var/cache/phpstan
    paths:
        - src
        - tests
    type_coverage:
        return_type: 99
        param_type: 98
        property_type: 55

    bootstrapFiles:
        - src/Core/DevOps/StaticAnalyze/phpstan-bootstrap.php
    # run `php src/Core/DevOps/StaticAnalyze/phpstan-bootstrap.php` to create the container
    symfony:
        constantHassers: false
        containerXmlPath: 'var/cache/phpstan_dev/Shopware_Core_DevOps_StaticAnalyze_StaticAnalyzeKernelPhpstan_devDebugContainer.xml'
        consoleApplicationLoader: src/Core/DevOps/StaticAnalyze/console-application.php

    excludePaths:
        - src/WebInstaller/Resources/
        - src/WebInstaller/ecs.php
        - src/WebInstaller/vendor
        - src/WebInstaller/Tests/_fixtures
        - tests/e2e/cypress

        - src/Core/DevOps/StaticAnalyze/Rector/ClassPackageRector.php
        # vendor patches over autoload files
        - src/Core/Framework/Adapter/Doctrine/Patch/AbstractAsset.php

        # Symfony interface typehints `Predis\ClientInterface` which is by default not available
        - src/Core/Framework/Adapter/Cache/ShopwareRedisAdapter.php
        - src/Core/Framework/Adapter/Cache/ShopwareRedisTagAwareAdapter.php

        # node_modules
        - src/**/node_modules/*
        - tests/**/node_modules/*

        # twig override
        - src/Core/Framework/Adapter/Twig/functions.php

        # class behind feature flags
        - src/Core/Checkout/Cart/Exception/InvalidCartException.php

        # extends final class, which is ok for mocks
        - src/Core/Content/Test/ImportExport/MockRepository.php

        # @todo NEXT-22697 - Remove when re-enabling cms-aware
        - src/Core/System/CustomEntity/Xml/Config/CustomEntityEnrichmentService.php
        - tests/integration/Core/System/CustomEntity/Xml/Config/CmsAwareAndAdminUiTest.php

        # PHPStan rule test files
        - tests/unit/Core/DevOps/StaticAnalyse/PHPStan/Rules/data/*

        # Compatibility traits for Redis can be removed, once we are requiring Redis 6.0.0
        - src/Core/Test/Stub/Redis/RedisCompatibility.php
        - src/Core/Test/Stub/Redis/RedisMultiCompatibility.php

    ignoreErrors:
        # The symfony extension checks against the "normal" container, not the test container
        # Therefore some services in the tests are not found and the extension can not infer that all private services are public during test execution
        -
            message: '#Service ".*" is not registered in the container\.#'
            paths:
                - src/**/*Test.php
                - tests/unit
                - tests/integration
                - src/Core/Framework/Test/TestCaseBase/*.php
        -
            message: '#Service ".*" is private#'
            paths:
                - src/**/*Test.php
                - tests/performance/**/*Bench.php
                - tests/unit/**/*Test.php
                - tests/integration/**/*Test.php
                - tests/integration/**/*TestCase.php

        # ignore errors caused by static::markTestSkipped
        -
            message: '#Unreachable statement - code above always terminates.#'
            paths:
                - src/**/*Test.php
                - tests/**/*Test.php

        # To fix this error, the \Shopware\Core\Framework\Struct\Collection::createNew method has to be implemented
        # in every implementation of `Collection` and needs to return `new self` instead of `new static`. See https://github.com/phpstan/phpstan/issues/2773
        -
            message: '#Unsafe usage of new static\(\)#'
            path: src/Core/Framework/Struct/Collection.php

        # @final annotation of internal classes
        - '#.*extends @final class Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\EntitySearchResult\.#'
        - '#.*extends @final class Shopware\\Core\\Framework\\DataAbstractionLayer\\EntityRepository.#'
        - '#Class Shopware\\Tests\\Integration\\Elasticsearch\\Product\\EsAwareCriteria extends @final class Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\Criteria\.#'

        # dynamic hydrator performance
        -
            message: '#Access to an undefined property Shopware\\Core\\Framework\\DataAbstractionLayer\\Entity#'
            path: src/*/*Hydrator.php
        -
            message: '#Access to protected property *#'
            path: src/*/*Hydrator.php
        -
            message: '#Method Shopware\\Core\\Framework\\DataAbstractionLayer\\Entity::\_\_.*\(\) has.*#'
            path: src/Core/Framework/DataAbstractionLayer/Entity.php

        # can be removed with feature flag FEATURE_NEXT_12455
        -
            message: '#Method Shopware\\Core\\Checkout\\Cart\\Facade\\.*::getIterator\(\) return type with generic class ArrayIterator does not specify its types: TKey, TValue#'
            path: src/Core/Checkout/Cart/Facade/Traits/ItemsIteratorTrait.php
        # Is in the new super class nullable as the extended class
        -
            message: "#^PHPDoc type string\\|null of property Shopware\\\\Core\\\\Framework\\\\DataAbstractionLayer\\\\Field\\\\ReferenceVersionField\\:\\:\\$storageName is not covariant with PHPDoc type string of overridden property Shopware\\\\Core\\\\Framework\\\\DataAbstractionLayer\\\\Field\\\\FkField\\:\\:\\$storageName\\.$#"
            count: 1
            path: src/Core/Framework/DataAbstractionLayer/Field/ReferenceVersionField.php

        # PhpStan cannot follow the referenced cursor
        -
            message: "#^Variable \\$extensions in empty\\(\\) always exists and is always falsy\\.$#"
            count: 1
            path: src/Core/Framework/DataAbstractionLayer/VersionManager.php

        # Invalid trait usage
        -
            message: "#^Dead catch \\- ReflectionException is never thrown in the try block\\.$#"
            count: 1
            path: src/Core/Checkout/Cart/Error/Error.php

        -
            message: "#^Dead catch \\- ReflectionException is never thrown in the try block\\.$#"
            count: 1
            path: src/Core/Content/ProductExport/Error/Error.php

        - # MockRepo extends final EntityRepository class, with is ok for tests
            message: "#^Class Shopware\\Core\\Content\\Test\\ImportExport\\MockRepository extends @final class Shopware\\Core\\Framework\\DataAbstractionLayer\\EntityRepository.$#"
            count: 1
            path: src/Core/Content/Test/ImportExport/MockRepository.php

        - # Tests are skipped in setup, leading to PHPStan errors, should be re-enabled with NEXT-24549
            message: "#^Property .* is never written, only read.$#"
            paths:
                - src/Core/Migration/Test/Migration1648803451FixInvalidMigrationOfBusinessEventToFlowTest.php
                - src/Core/Migration/Test/Migration1639992771MoveDataFromEventActionToFlowTest.php
                - src/Core/Migration/Test/Migration1632215760MoveDataFromEventActionToFlowTest.php
                - src/Core/Migration/Test/Migration1625583619MoveDataFromEventActionToFlowTest.php

        - # @deprecated tag:v6.6.0 Using autoload === true on associations is deprecated and must be refactored
            message: '#^[a-zA-Z_]+\.[a-zA-Z_]+ association has a configured autoload\=\=\=true, this is forbidden for platform integrations$#'
            paths:
                - src/Core/Content/Rule/Aggregate/RuleCondition/RuleConditionDefinition.php
                - src/Core/Content/Product/ProductDefinition.php
                - src/Core/Content/Product/Aggregate/ProductMedia/ProductMediaDefinition.php
                - src/Core/Checkout/Shipping/ShippingMethodDefinition.php
                - src/Core/Checkout/Payment/PaymentMethodDefinition.php
                - src/Core/System/NumberRange/NumberRangeDefinition.php

        - # NEXT-25276 - Needs to be fixed with the update ot PHPUnit 10
            message: '#deprecated interface PHPUnit\\Framework\\TestListener#'
            path: src/Core/Test/PHPUnit/Extension/DatadogListener.php

        # Internal deprecations of Shopware are handled in other places
        - '#deprecated.*class Shopware\\#'
        - '#deprecated.*interface Shopware\\#'

        - # tests are allowed to add dummy classes in the same file
            message: '#Multiple class\/interface\/trait is not allowed in single file#'
            paths:
                - src/**/Test/**
                - tests/**

        - # It explicitly tests array access on object, so it works from twig scripts
            message: "#Use explicit methods over array access on object$#"
            path: src/Core/Framework/Test/Script/Service/ArrayFacadeTest.php

        # @deprecated tag:v6.6.0 - Adding a new required parameter app in Webhooks for the next major version
        - message: '#PHPDoc tag \@param references unknown parameter: \$app#'
          path: src/Core/Framework/Webhook/Hookable.php

        # @deprecated tag:v6.6.0 - column availability_rule_id in table shipping_method can be nullable in the next major version. The concerned shipping methods will always be interpreted as valid.
        - message: '#Strict comparison using === between string and null will always evaluate to false.#'
          path: src/Core/Checkout/Cart/Delivery/DeliveryValidator.php
        - message: '#Strict comparison using === between string and null will always evaluate to false.#'
          path: src/Core/Checkout/Shipping/ShippingMethodCollection.php

        - # Classes that are allowed to use dynamic property name access
            message: '#Use explicit names over dynamic ones#'
            paths:
                - src/Core/Checkout/Cart/LineItem/LineItem.php
                - src/Core/Checkout/Document/DocumentConfiguration.php
                - src/Core/Content/Product/Hook/Pricing/ProductProxy.php
                - src/Core/Framework/Api/ApiDefinition/Generator/StoreApiGenerator.php
                - src/Core/Framework/Struct/AssignArrayTrait.php
                - src/Core/Framework/Struct/CloneTrait.php
                - src/Core/Framework/Struct/CreateFromTrait.php
                - src/Core/Framework/App/Manifest/Xml/XmlElement.php
                - src/Core/Framework/App/Manifest/Xml/CustomField/CustomFieldTypes/SingleEntitySelectField.php
                - src/Core/Framework/App/Manifest/Xml/CustomField/CustomFieldTypes/SingleSelectField.php
                - src/Core/Framework/App/Payment/Response/AbstractResponse.php
                - src/Core/Framework/DataAbstractionLayer/Dbal/EntityHydrator.php
                - src/Core/Framework/DataAbstractionLayer/Entity.php
                - src/Core/Framework/DataAbstractionLayer/Util/AfterSort.php

        # Breaking changes which are not worth it
        - '#Method Shopware\\Core\\Framework\\DataAbstractionLayer\\EntityCollection::filterAndReduceByProperty\(\) has parameter \$value with no type specified\.#'

        - # Google Cloud Storage filesystem closes the stream even though it should not
            message: '#Call to function is_resource\(\) with resource will always evaluate to true#'
            paths:
                - src/Core/Framework/Plugin/Util/AssetService.php
                - src/Core/Content/Media/File/FileSaver.php
                - src/Core/Content/ImportExport/ImportExport.php

        - # Will be fixed with NEXT-26122
            message: '#Doing instanceof PHPStan\\Type\\.* is error-prone and deprecated. Use Type::.*\(\) instead#'
            paths:
                - src/Core/DevOps/StaticAnalyze/PHPStan/Rules/NoFlowStoreFunctionRule.php

        - # Can not be fixed currently. See https://github.com/phpstan/phpstan/discussions/9159
            message: '#Method Shopware\\Core\\Framework\\DataAbstractionLayer\\Field\\Field::getFlag\(\) should return \(TFlag of Shopware\\Core\\Framework\\DataAbstractionLayer\\Field\\Flag\\Flag\)\|null but returns Shopware\\Core\\Framework\\DataAbstractionLayer\\Field\\Flag\\Flag\|null#'
            path: src/Core/Framework/DataAbstractionLayer/Field/Field.php
            count: 1

        # test plugin implementations in fixtures, the files can't be excluded as that would lead to errors when they are used
        -
            message: '#.*#'
            paths:
                - src/Core/Framework/Test/Store/_fixtures/AppStoreTestPlugin/*
                - src/Core/Framework/Test/Plugin/_fixture/plugins/*
                - src/Core/Framework/Test/Plugin/Requirement/_fixture/SwagRequirementValidTestExtension/*
                - tests/integration/Core/System/CustomEntity/Xml/Config/_fixtures/plugins/*
                - tests/integration/Core/Framework/Store/_fixtures/AppStoreTestPlugin/*

        - # Hard to fix, as no proper var annotation could be used within the while loop
            message: "#^Parameter \\#1 \\$mediaIds of method Shopware\\\\Core\\\\Content\\\\Media\\\\UnusedMediaPurger\\:\\:filterOutNewMedia\\(\\) expects array\\<string\\>, array\\<int, array\\<string, string\\>\\|string\\> given\\.$#"
            count: 1
            path: src/Core/Content/Media/UnusedMediaPurger.php

        # NEXT-29041 - Needs to be fixed with a script, rest goes to baseline
        - '#.* generic class Shopware\\Core\\Framework\\DataAbstractionLayer\\EntityRepository.*not specify its types: TEntityCollection#'
        - '#.* generic class Shopware\\Core\\System\\SalesChannel\\Entity\\SalesChannelRepository.*not specify its types: TEntityCollection#'

        - # No need to fix for now, as the facades are only used in twig context
            message: '#.* generic class Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\EntitySearchResult.*does not specify its types: TEntityCollection#'
            paths:
                - src/Core/Framework/DataAbstractionLayer/Facade/RepositoryFacade.php
                - src/Core/Framework/DataAbstractionLayer/Facade/SalesChannelRepositoryFacade.php

        - # Needs a proper class-string annotation in `\Shopware\Core\Framework\DataAbstractionLayer\EntityDefinition::getCollectionClass` and all child classes
            message: '#PHPDoc tag @var with type .*Shopware\\Core\\Framework\\DataAbstractionLayer\\EntityCollection.* is not subtype of native type string#'
            paths:
                - src/Core/Framework/DataAbstractionLayer/Dbal/EntityReader.php
                - src/Core/Framework/DataAbstractionLayer/EntityRepository.php
                - src/Core/System/SalesChannel/Entity/SalesChannelRepository.php

        - # It is not possible to specify the type of the EntitySearchResult, as the CmsSlotDataResolver and the ElementDataCollection are used for multiple entities at the same time
            message: '#.* with generic class Shopware\\Core\\Framework\\DataAbstractionLayer\\EntityCollection.*not specify its types: TElement#'
            paths:
                - src/Core/Content/Cms/DataResolver/CmsSlotsDataResolver.php
                - src/Core/Content/Cms/DataResolver/Element/ElementDataCollection.php
        - '#Parameter \#2 \$entitySearchResult of method Shopware\\Core\\Content\\Cms\\DataResolver\\Element\\ElementDataCollection::add\(\) expects Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\EntitySearchResult<Shopware\\Core\\Framework\\DataAbstractionLayer\\EntityCollection>, Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\EntitySearchResult<Shopware\\.*Collection> given#'
        - # It is not possible to specify the type of the EntityResult, as the Aggregators are used for multiple entities at the same time
            message: '#Method Shopware\\.*::hydrateEntityAggregation\(\) return type with generic class Shopware\\Core\\Framework\\DataAbstractionLayer\\Search\\AggregationResult\\Metric\\EntityResult does not specify its types: TEntityCollection#'
            paths:
                - src/Core/Framework/DataAbstractionLayer/Dbal/EntityAggregator.php
                - src/Elasticsearch/Framework/DataAbstractionLayer/ElasticsearchEntityAggregatorHydrator.php

        - # For testing purpose this error can be ignored
            message: '#Cannot assign new offset to Shopware\\Core\\Framework\\Script\\Facade\\ArrayFacade#'
            path: src/Core/Framework/Test/Script/Service/ArrayFacadeTest.php

        - # TestBuilders must not be internal
            message: '#must be flagged @internal to not be captured by the BC checker#'
            paths:
                - src/Core/Test/Integration/Builder

        - message: '#Method Shopware\\Core\\Test\\Stub\\Redis\\RedisStub::do.*\(\) is unused#'
          path: src/Core/Test/Stub/Redis/RedisStub.php

        # To not have a single case for each type, we check them dynamically.
        - message: '#Use explicit names over dynamic ones#'
          path: src/Core/Framework/Validation/HappyPathValidator.php
          count: 2

        # Http cache moves to core
        - message: '#Multiple class\/interface\/trait is not allowed in single file#'
          path: src/Core/Framework/Adapter/Cache/ReverseProxy/AbstractReverseProxyGateway.php
        - message: '#Class like namespace \"Shopware\\Storefront\\Framework\\Cache\\ReverseProxy\" does not follow PSR-4 configuration in composer\.json#'
          path: src/Core/Framework/Adapter/Cache/ReverseProxy/AbstractReverseProxyGateway.php


services:
    -   # register the class so we can decorate it, but don't tag it as a rule, so only our decorator is used by phpstan
        class: Symplify\PHPStanRules\Rules\NoReturnSetterMethodRule

rules:
    # rules from https://github.com/symplify/phpstan-rules
    # domain
    - Symplify\PHPStanRules\Rules\Enum\RequireUniqueEnumConstantRule
    - Symplify\PHPStanRules\Rules\ForbiddenParamTypeRemovalRule
    - Symplify\PHPStanRules\Rules\PreventParentMethodVisibilityOverrideRule

    # paths
    - Symplify\PHPStanRules\Rules\NoMissingDirPathRule
    - Symplify\PHPStanRules\Rules\NoArrayAccessOnObjectRule

    # dead-code
    - Symplify\PHPStanRules\Rules\NoIssetOnObjectRule

    # explicit naming
    - Symplify\PHPStanRules\Rules\ForbiddenMultipleClassLikeInOneFileRule

    - Symplify\PHPStanRules\Rules\Complexity\ForbiddenArrayMethodCallRule

    # complexity rules
    - Symplify\PHPStanRules\Rules\Explicit\NoMixedPropertyFetcherRule
    - Symplify\PHPStanRules\Rules\Explicit\NoMixedMethodCallerRule
    - Symplify\PHPStanRules\Rules\NoDynamicNameRule

    # naming rules
    - Shopware\Core\DevOps\StaticAnalyze\PHPStan\Rules\Symplify\NoReturnSetterMethodWithFluentSettersRule
    - Symplify\PHPStanRules\Rules\NoVoidGetterMethodRule
    - Symplify\PHPStanRules\Rules\UppercaseConstantRule
    - Symplify\PHPStanRules\Rules\CheckClassNamespaceFollowPsr4Rule
