diff --git a/node_modules/vue-eslint-parser/index.js b/node_modules/vue-eslint-parser/index.js
index 916b730..1c0af1a 100644
--- a/node_modules/vue-eslint-parser/index.js
+++ b/node_modules/vue-eslint-parser/index.js
@@ -233,7 +233,7 @@ function isSFCFile(parserOptions) {
     if (parserOptions.filePath === "<input>") {
         return true;
     }
-    return path.extname(parserOptions.filePath || "unknown.vue") === ".vue";
+    return ['.vue', '.twig'].includes(path.extname(parserOptions.filePath || "unknown.vue"));
 }
 function getScriptParser(parser, getParserLang) {
     if (parser && typeof parser === "object") {
@@ -5350,7 +5350,7 @@ function skipSpaces(code, nextIndex) {
 const STARTS_WITH_LT = /^\s*</u;
 function isVueFile(code, options) {
     const filePath = options.filePath || "unknown.js";
-    return path.extname(filePath) === ".vue" || STARTS_WITH_LT.test(code);
+    return [".vue", ".twig"].includes(path.extname(filePath)) || STARTS_WITH_LT.test(code);
 }
 function parseForESLint(code, parserOptions) {
     var _a, _b;
@@ -5412,7 +5412,7 @@ function parseForESLint(code, parserOptions) {
                     yield getParserLangFromSFC(rootAST);
                 }) }));
         }
-        result.ast.templateBody = templateBody;
+        result.modifiedSourceCode = code;
         document = rootAST;
     }
     result.services = Object.assign(result.services || {}, define(code, result.ast, document, locationCalculator, {
