<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->
{% block sw_custom_field_set_renderer %}
<div class="sw-custom-field-set-renderer">
    <template v-if="visibleCustomFieldSets.length > 0">
        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->
        {% block sw_custom_field_set_renderer_card %}
        <sw-tabs
            v-if="variant === 'tabs'"
            ref="tabComponent"
            class="sw-custom-field-set-renderer__card-tabs"
            variant="minimal"
            :default-item="visibleCustomFieldSets[0].id"
            :position-identifier="'sw-custom-field-set-renderer'"
            @new-item-active="(tab) => loadCustomFieldSet(tab.name)"
        >
            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->
            {% block sw_custom_field_set_renderer_card_tabs %}
            <template #default="{ active }">
                <template
                    v-for="set in visibleCustomFieldSets"
                    {% if VUE3 %}
                    :key="`sw-tab--${set.id}`"
                    {% endif %}
                >
                    <sw-tabs-item
                        {% if VUE2 %}
                        :key="`sw-tab--${set.id}`"
                        {% endif %}
                        variant="minimal"
                        :name="set.id"
                        :class="'sw-tab--name-' + set.name"
                        :active-tab="active"
                    >
                        {{ getTabLabel(set) }}
                    </sw-tabs-item>
                </template>
            </template>
            {% endblock %}

            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->
            {% block sw_custom_field_set_renderer_card_tabs_content %}
            <template
                #content="{ active }"
            >
                <template
                    v-for="set in visibleCustomFieldSets"
                    {% if VUE3 %}
                    :key="set.id"
                    {% endif %}
                >
                    <div
                        v-show="active === set.id"
                        {% if VUE2 %}
                        :key="set.id"
                        {% endif %}
                        :class="'sw-custom-field-set-renderer-tab-content__' + set.name"
                    >
                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->
                        {% block sw_custom_field_set_renderer_card_form_renderer %}
                        <sw-skeleton
                            v-if="!set.customFields"
                            style="width:100%"
                        />
                        <template v-else>
                            <template
                                v-for="customField in set.customFields"
                                {% if VUE3 %}
                                :key="customField.name"
                                {% endif %}
                            >
                                <sw-inherit-wrapper
                                    v-if="entity && customField.config"
                                    {% if VUE2 %}
                                    :key="customField.name"
                                    {% endif %}
                                    {% if VUE3 %}
                                    v-model:value="customFields[customField.name]"
                                    {% else %}
                                    v-model="customFields[customField.name]"
                                    {% endif %}
                                    v-bind="getInheritWrapperBind(customField)"
                                    :class="'sw-form-field-renderer-field__' + customField.name"
                                    :has-parent="hasParent"
                                    :required="customField.config.validation === 'required'"
                                    :inherited-value="getInheritedCustomField(customField.name)"
                                >
                                    <template #content="props">
                                        <sw-form-field-renderer
                                            v-bind="getBind(customField, props)"
                                            :key="props.isInherited"
                                            :class="'sw-form-field-renderer-input-field__' + customField.name"
                                            :disabled="disabled || props.isInherited"
                                            :value="props.currentValue"
                                            @input="props.updateCurrentValue"
                                            @change="props.updateCurrentValue"
                                        />
                                    </template>
                                </sw-inherit-wrapper>
                            </template>
                        </template>
                        {% endblock %}
                    </div>
                </template>
            </template>
            {% endblock %}
        </sw-tabs>
        {% endblock %}

        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->
        {% block sw_custom_field_set_renderer_media %}
        <template v-else-if="variant === 'media-collapse'">
            <template
                v-for="set in visibleCustomFieldSets"
                {% if VUE3 %}
                :key="`sw-media-collapse--${set.id}`"
                {% endif %}
            >
                <!-- eslint-disable vue/no-use-v-if-with-v-for -->
                <sw-media-collapse
                    v-if="set.customFields && set.customFields.length > 0"
                    {% if VUE2 %}
                    :key="`sw-media-collapse--${set.id}`"
                    {% endif %}
                    :expand-on-loading="false"
                    :title="getInlineSnippet(set.config.label) || set.name"
                >
                    <template #content>
                        <template
                            v-for="customField in set.customFields"
                            {% if VUE3 %}
                            :key="customField.name"
                            {% endif %}
                        >
                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->
                        {% block sw_custom_field_set_renderer_media_form_renderer %}
                            <sw-form-field-renderer
                                {% if VUE2 %}
                                :key="customField.name"
                                {% endif %}
                                v-model="customFields[customField.name]"
                                v-bind="customField"
                                :disabled="disabled"
                                :required="customField.config.validation === 'required'"
                            />
                        {% endblock %}
                        </template>
                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->
                    {% block sw_custom_field_set_renderer_media_button_save %}
                        <sw-button-process
                            :is-loading="isLoading"
                            :process-success="isSaveSuccessful"
                            :disabled="isLoading || disabled"
                            variant="primary"
                            size="small"
                            {% if VUE3 %}
                            @update:process-success="$emit('process-finish')"
                            {% else %}
                            @process-finish="$emit('process-finish')"
                            {% endif %}
                            @click="$emit('save')"
                        >
                            {{ $tc('global.default.save') }}
                        </sw-button-process>
                    {% endblock %}
                    </template>
                </sw-media-collapse>
            </template>
        </template>
        {% endblock %}
    </template>
</div>
{% endblock %}
