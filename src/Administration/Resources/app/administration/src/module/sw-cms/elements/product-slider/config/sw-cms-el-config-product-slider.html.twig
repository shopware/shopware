{% block sw_cms_element_product_slider_config %}
    <div class="sw-cms-el-config-product-slider">
        {% block sw_cms_element_product_slider_config_tabs %}
            <sw-tabs class="sw-cms-el-config-product-slider__tabs" defaultItem="content">
                <template slot-scope="{ active }" >
                    {% block sw_cms_element_product_slider_config_tab_content %}
                        <sw-tabs-item :title="$tc('sw-cms.elements.general.config.tab.content')"
                                      name="content"
                                      :activeTab="active">
                            {{ $tc('sw-cms.elements.general.config.tab.content') }}
                        </sw-tabs-item>
                    {% endblock %}
                    {% block sw_cms_element_product_slider_config_tab_options %}
                        <sw-tabs-item :title="$tc('sw-cms.elements.general.config.tab.settings')"
                                      name="settings"
                                      :activeTab="active">
                            {{ $tc('sw-cms.elements.general.config.tab.settings') }}
                        </sw-tabs-item>
                    {% endblock %}
                </template>

                <template slot="content" slot-scope="{ active }">
                    {% block sw_cms_element_product_slider_config_content %}
                        <sw-container v-if="active === 'content'" class="sw-cms-el-config-product-slider__tab-content">
                            {% block sw_cms_element_product_slider_config_content_title %}
                                <sw-field type="text"
                                          :label="$tc('sw-cms.elements.productSlider.config.label.title')"
                                          :placeholder="$tc('sw-cms.elements.productSlider.config.placeholder.title')"
                                          v-model="element.config.title.value">
                                </sw-field>
                            {% endblock %}

                            {% block sw_cms_element_product_slider_config_content_products %}
                                <sw-entity-multi-select
                                        class="sw-cms-el-config-product-slider__products"
                                        :label="$tc('sw-cms.elements.productSlider.config.label.selection')"
                                        :placeholder="$tc('sw-cms.elements.productSlider.config.placeholder.selection')"
                                        v-model="productCollection"
                                        @change="onProductsChange"
                                        :context="productMultiSelectContext"
                                        :criteria="productMediaFilter">
                                    <template #result-label-property="{ item, index, labelProperty, searchTerm, getKey }">
                                        <sw-highlight-text
                                                :text="getKey(item,labelProperty) || getKey(item, `translated.${labelProperty}`)"
                                                :searchTerm="searchTerm">
                                        </sw-highlight-text>
                                        <span class="sw-cms-el-config-product-slider__select-product-number">{{ item.productNumber }}</span>
                                    </template>
                                </sw-entity-multi-select>
                            {% endblock %}
                        </sw-container>
                    {% endblock %}

                    {% block sw_cms_element_product_slider_config_settings %}
                        <sw-container v-if="active === 'settings'" class="sw-cms-el-config-product-slider__tab-settings">

                            {% block sw_cms_element_product_slider_config_settings_display_mode %}
                                <sw-select-field :label="$tc('sw-cms.elements.general.config.label.displayMode')"
                                                 v-model="element.config.displayMode.value">
                                    <option value="standard">{{ $tc('sw-cms.elements.general.config.label.displayModeStandard') }}</option>
                                    <option value="cover">{{ $tc('sw-cms.elements.general.config.label.displayModeCover') }}</option>
                                    <option value="contain">{{ $tc('sw-cms.elements.general.config.label.displayModeContain') }}</option>
                                </sw-select-field>
                            {% endblock %}

                            {% block sw_cms_element_product_slider_config_settings_vertical_align %}
                                <sw-select-field :label="$tc('sw-cms.elements.general.config.label.verticalAlign')"
                                                 v-model="element.config.verticalAlign.value"
                                                 :placeholder="$tc('sw-cms.elements.general.config.label.verticalAlign')">
                                    <option value="flex-start">{{ $tc('sw-cms.elements.general.config.label.verticalAlignTop') }}</option>
                                    <option value="center">{{ $tc('sw-cms.elements.general.config.label.verticalAlignCenter') }}</option>
                                    <option value="flex-end">{{ $tc('sw-cms.elements.general.config.label.verticalAlignBottom') }}</option>
                                </sw-select-field>
                            {% endblock %}

                            {% block sw_cms_element_product_slider_config_settings_box_layout %}
                                <sw-select-field :label="$tc('sw-cms.elements.productBox.config.label.layoutType')"
                                                 v-model="element.config.boxLayout.value">
                                    <option value="standard">{{ $tc('sw-cms.elements.productBox.config.label.layoutTypeStandard') }}</option>
                                    <option value="image">{{ $tc('sw-cms.elements.productBox.config.label.layoutTypeImage') }}</option>
                                    <option value="minimal">{{ $tc('sw-cms.elements.productBox.config.label.layoutTypeMinimal') }}</option>
                                </sw-select-field>
                            {% endblock %}

                            {% block sw_cms_element_product_slider_config_settings_navigation %}
                                <sw-field type="switch"
                                          bordered
                                          :label="$tc('sw-cms.elements.productSlider.config.label.navigation')"
                                          v-model="element.config.navigation.value">
                                </sw-field>
                            {% endblock %}

                            {% block sw_cms_element_product_slider_config_settings_rotate %}
                                <sw-field type="switch"
                                          bordered
                                          :label="$tc('sw-cms.elements.productSlider.config.label.rotate')"
                                          v-model="element.config.rotate.value">
                                </sw-field>
                            {% endblock %}

                            {% block sw_cms_element_product_slider_config_settings_border %}
                                <sw-field type="switch"
                                          bordered
                                          :label="$tc('sw-cms.elements.productSlider.config.label.border')"
                                          v-model="element.config.border.value">
                                </sw-field>
                            {% endblock %}

                            {% block sw_cms_element_product_slider_config_settings_min_width %}
                                <sw-field type="text"
                                          :label="$tc('sw-cms.elements.productSlider.config.label.minWidth')"
                                          :placeholder="$tc('sw-cms.elements.productSlider.config.placeholder.minWidth')"
                                          v-model="element.config.elMinWidth.value">
                                </sw-field>
                            {% endblock %}
                        </sw-container>
                    {% endblock %}
                </template>
            </sw-tabs>
        {% endblock %}
    </div>
{% endblock %}
