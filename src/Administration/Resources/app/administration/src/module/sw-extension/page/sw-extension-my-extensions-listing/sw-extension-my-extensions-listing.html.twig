<div class="sw-extension-my-extensions-listing">
    <sw-skeleton
        v-if="isLoading"
        :variant="skeletonVariant"
    />

    <div
        v-else
        class="sw-extension-my-extensions-listing__listing-grid"
    >
        <sw-alert
            v-if="!isAppUrlReachable"
            class="sw-extension-my-extensions-listing__app-url-warning"
            variant="warning"
            :title="$tc('sw-app.component.sw-app-wrong-app-url-modal.title')"
        >

            <template #default>
                <div>
                    {{ $tc('sw-app.component.sw-app-wrong-app-url-modal.explanation') }}
                </div>
                <div>
                    {{ $tc('sw-app.component.sw-app-wrong-app-url-modal.textGetSupport') }}
                </div>
            </template>

            <template #actions>
                <sw-button
                    class="sw-app-wrong-app-url-modal__content-link-button"
                    variant="ghost"
                    :link="$tc('sw-app.component.sw-app-wrong-app-url-modal.linkToDocsArticle')"
                >
                    {{ $tc('sw-app.component.sw-app-wrong-app-url-modal.labelLearnMoreButton') }}
                </sw-button>
            </template>

        </sw-alert>
        <sw-meteor-card
            v-if="!extensionListPaginated.length && !filterByActiveState"
            class="sw-extension-my-extensions-listing__empty-state"
        >
            <img
                :src="'administration/static/img/empty-states/extensions-empty-state.svg' | asset"
                alt=""
            >

            <h3 v-if="isThemeRoute">
                {{ $tc('sw-extension-store.component.sw-extension-my-extensions-listing.themes.titleEmptyState') }}
            </h3>
            <h3 v-else>
                {{ $tc('sw-extension-store.component.sw-extension-my-extensions-listing.apps.titleEmptyState') }}
            </h3>

            <p v-if="isThemeRoute">
                {{ $tc('sw-extension-store.component.sw-extension-my-extensions-listing.themes.textEmptyState') }}
            </p>
            <p v-else>
                {{ $tc('sw-extension-store.component.sw-extension-my-extensions-listing.apps.textEmptyState') }}
            </p>

            <sw-button
                variant="ghost"
                @click="openStore"
            >
                {{ $tc('sw-extension-store.component.sw-extension-my-extensions-listing.btnOpenStore') }}
            </sw-button>
        </sw-meteor-card>

        <template v-else>
            <div class="sw-extension-my-extensions-listing__container">
                <sw-extension-my-extensions-listing-controls
                    @update:active-state="changeActiveState"
                    @update:sorting-option="changeSortingOption"
                />

                <sw-meteor-card
                    v-if="!extensionListPaginated.length && filterByActiveState"
                    class="sw-extension-my-extensions-listing__empty-state"
                >
                    <img
                        :src="'administration/static/img/empty-states/extensions-empty-state.svg' | asset"
                        alt=""
                    >

                    <h3 v-if="isThemeRoute">
                        {{ $tc('sw-extension-store.component.sw-extension-my-extensions-listing.themes.noActivePlugins') }}
                    </h3>
                    <h3 v-else>
                        {{ $tc('sw-extension-store.component.sw-extension-my-extensions-listing.apps.noActivePlugins') }}
                    </h3>
                </sw-meteor-card>

                <template v-else>
                    <template v-for="entry in extensionListPaginated">
                        <component
                            :is="entry.storeLicense ? 'sw-extension-card-bought' : 'sw-self-maintained-extension-card'"
                            :key="entry.name"
                            :extension="entry"
                            @updateList="updateList"
                        />
                    </template>

                    <sw-pagination
                        :total="total"
                        :limit="limit"
                        :page="page"
                        @page-change="changePage"
                    />
                </template>
            </div>
        </template>
    </div>
</div>
