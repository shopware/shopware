{
    "openapi": "3.0.0",
    "info": [],
    "paths": {
        "/checkout/cart": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Fetch or create a cart",
                "description": "Used to fetch the current cart or for creating a new one.",
                "operationId": "readCart",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The name of the new cart. This parameter will only be used when creating a new cart.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cart",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cart"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Delete a cart",
                "description": "This route deletes the cart of the customer.",
                "operationId": "deleteCart",
                "responses": {
                    "204": {
                        "description": "Successfully deleted the cart",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/checkout/cart/line-item": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Add items to the cart",
                "description": "This route adds items to the cart. An item can be a product or promotion for example. They are referenced by the `referencedId`-parameter.\n\nExample: [Working with the cart - Guide](https://developer.shopware.com/docs/guides/integrations-api/store-api-guide/work-with-the-cart#adding-new-items-to-the-cart)",
                "operationId": "addLineItem",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CartItems"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated cart.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cart"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Remove items from the cart",
                "description": "This route removes items from the cart and recalculates it.\n\nExample: [Working with the cart - Guide](https://developer.shopware.com/docs/guides/integrations-api/store-api-guide/work-with-the-cart#deleting-items-in-the-cart)",
                "operationId": "removeLineItem",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "A list of product identifiers.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "pattern": "^[0-9a-f]{32}$"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The updated cart.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cart"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Cart"
                ],
                "summary": "Update items in the cart",
                "description": "This route updates items in the cart. A typical example is updating the quantity of an item.\n\nExample: [Working with the cart - Guide](https://developer.shopware.com/docs/guides/integrations-api/store-api-guide/work-with-the-cart#updating-items-in-the-cart)",
                "operationId": "updateLineItem",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CartItems"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated cart.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cart"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/checkout/order": {
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Create an order from a cart",
                "description": "Creates a new order from the current cart and deletes the cart.\n\nIf you are using the [prepared payment flow](https://developer.shopware.com/docs/concepts/commerce/checkout-concept/payments#2.1-prepare-payment-optional), this endpoint also receives additional transaction details. The exact name of the parameters depends on the implementation of the corresponding *payment handler*.",
                "operationId": "createOrder",
                "requestBody": {
                    "description": "Contains additional metadata which is stored together with the order. It can also contain payment transaction details.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "customerComment": {
                                        "description": "Adds a comment from the customer to the order.",
                                        "type": "string"
                                    },
                                    "affiliateCode": {
                                        "description": "The affiliate code can be used to track which referrer the customer came through. An example could be `Price-comparison-company-XY`.",
                                        "type": "string"
                                    },
                                    "campaignCode": {
                                        "description": "The campaign code is used to track which action the customer came from. An example could be `Summer-Deals`",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    }
                ]
            }
        }
    }
}