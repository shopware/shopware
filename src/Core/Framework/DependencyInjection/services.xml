<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:monolog="http://symfony.com/schema/dic/monolog"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd http://symfony.com/schema/dic/monolog http://symfony.com/schema/dic/monolog/monolog-1.0.xsd">

    <parameters>
        <parameter key="shopware.slug.config" type="collection">
            <parameter key="regexp">/([^A-Za-z0-9\.]|-)+/</parameter>
            <parameter key="lowercase">false</parameter>
        </parameter>

        <!-- Migration config -->
        <parameter key="migration.directories" type="collection" />
        <parameter key="migration.active" type="collection"/>
    </parameters>

    <monolog:config>
        <monolog:channel>business_events</monolog:channel>

        <monolog:handler
                name="business_event_handler_buffer"
                type="buffer"
                handler="business_event_handler">
            <monolog:channels>
                <monolog:channel>business_events</monolog:channel>
            </monolog:channels>
        </monolog:handler>

        <monolog:handler
            name="business_event_handler"
            type="service"
            id="Shopware\Core\Framework\Logging\Monolog\DoctrineSQLHandler">
            <monolog:channels>
                <monolog:channel>business_events</monolog:channel>
            </monolog:channels>
        </monolog:handler>
    </monolog:config>

    <services>
        <service id="templating.loader.wrapped" alias="templating.loader"/>

        <!-- Asset -->
        <service id="Shopware\Core\Framework\Asset\AssetPackageService" public="true">
            <argument type="service" id="assets.packages"/>
        </service>

        <!-- Database / Doctrine -->
        <service id="Doctrine\DBAL\Connection" public="true">
            <factory class="Shopware\Core\Kernel" method="getConnection"/>
        </service>

        <service id="Shopware\Core\Framework\Routing\QueryDataBagResolver">
            <tag name="controller.argument_value_resolver" priority="1000"/>
        </service>

        <service id="Shopware\Core\Framework\Routing\RequestDataBagResolver">
            <tag name="controller.argument_value_resolver" priority="1000"/>
        </service>

        <!-- Cache -->
        <service class="Cocur\Slugify\Slugify" public="false" id="slugify">
            <argument>%shopware.slug.config%</argument>
        </service>

        <service id="Shopware\Core\Framework\Provisioning\UserProvisioner">
            <argument type="service" id="Doctrine\DBAL\Connection"/>
        </service>



        <!-- Migration -->
        <service id="Shopware\Core\Framework\Migration\MigrationRuntime">
            <argument type="service" id="Doctrine\DBAL\Connection"/>
            <argument type="service" id="logger"/>
        </service>

        <service id="Shopware\Core\Framework\Migration\MigrationCollection">
            <argument>%migration.directories%</argument>
        </service>

        <service id="Shopware\Core\Framework\Migration\MigrationCollectionLoader">
            <argument type="service" id="Doctrine\DBAL\Connection"/>
            <argument type="service" id="Shopware\Core\Framework\Migration\MigrationCollection"/>
        </service>

        <service id="Shopware\Core\Framework\Migration\Command\CreateMigrationCommand">
            <argument type="service" id="Shopware\Core\Framework\Plugin\KernelPluginCollection"/>
            <argument type="service" id="Shopware\Core\Framework\Plugin\PluginService"/>
            <argument>%kernel.project_dir%</argument>

            <tag name="console.command"/>
        </service>

        <service id="Shopware\Core\Framework\Migration\Command\RefreshMigrationCommand">
            <tag name="console.command"/>
        </service>

        <service id="Shopware\Core\Framework\Migration\Command\MigrationCommand">
            <argument type="service" id="Shopware\Core\Framework\Migration\MigrationCollectionLoader"/>
            <argument type="service" id="Shopware\Core\Framework\Migration\MigrationRuntime"/>
            <argument type="service" id="cache.object"/>

            <tag name="console.command"/>
        </service>

        <service id="Shopware\Core\Framework\PersonalData\CleanPersonalDataCommand">
            <argument type="service" id="Doctrine\DBAL\Connection"/>
            <argument type="service" id="customer.repository"/>

            <tag name="console.command"/>
        </service>

        <service id="Shopware\Core\Framework\Migration\Command\MigrationDestructiveCommand">
            <argument type="service" id="Shopware\Core\Framework\Migration\MigrationCollectionLoader"/>
            <argument type="service" id="Shopware\Core\Framework\Migration\MigrationRuntime"/>
            <argument type="service" id="cache.object"/>

            <tag name="console.command"/>
        </service>

        <service id="Shopware\Core\Framework\Migration\Api\MigrationController" public="true">
            <argument type="service" id="Shopware\Core\Framework\Migration\MigrationCollectionLoader"/>
            <argument type="service" id="Shopware\Core\Framework\Migration\MigrationRuntime"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="Shopware\Core\Framework\Migration\IndexerQueuer" public="true">
            <argument type="service" id="Doctrine\DBAL\Connection"/>
        </service>

        <!-- Serializer -->
        <service id="Shopware\Core\Framework\Struct\Serializer\StructNormalizer">
            <tag name="serializer.normalizer"/>
        </service>

        <service id="Shopware\Core\Framework\Struct\Serializer\StructDecoder">
            <tag name="serializer.encoder"/>
        </service>

        <!-- Routing -->
        <service id="Shopware\Core\Framework\Routing\ContextResolverListener">
            <argument type="service" id="request_stack"/>
            <argument type="service" id="Shopware\Core\Framework\Routing\ApiRequestContextResolver"/>

            <tag name="kernel.event_subscriber"/>
        </service>

        <service id="Shopware\Core\Framework\Routing\RouteScopeListener">
            <argument type="service" id="Shopware\Core\Framework\Routing\RouteScopeRegistry"/>
            <argument type="service" id="request_stack"/>
            <argument type="service" id="event_dispatcher"/>

            <tag name="kernel.event_subscriber"/>
        </service>

        <!-- Translation -->
        <service id="Shopware\Core\Framework\Translation\Translator"
                 decorates="translator">
            <argument type="service" id="Shopware\Core\Framework\Translation\Translator.inner"/>
            <argument type="service" id="request_stack"/>
            <argument type="service" id="cache.object"/>
            <argument type="service" id="translator.formatter"/>
            <argument type="service" id="Shopware\Core\Framework\Snippet\SnippetService"/>
            <argument type="service" id="language.repository"/>

            <tag name="monolog.logger"/>
        </service>

        <service id="Shopware\Core\Framework\Translation\TranslatorCacheInvalidate">
            <argument type="service" id="cache.object"/>
            <argument type="service" id="Doctrine\DBAL\Connection"/>

            <tag name="kernel.event_subscriber"/>
        </service>

        <!-- Snippets -->
        <service id="Shopware\Core\Framework\Snippet\SnippetService">
            <argument type="service" id="Doctrine\DBAL\Connection"/>
            <argument type="service" id="Shopware\Core\Framework\Snippet\Files\SnippetFileCollection"/>
            <argument type="service" id="snippet.repository"/>
            <argument type="service" id="snippet_set.repository"/>
            <argument type="service" id="sales_channel_domain.repository"/>
            <argument type="service" id="Shopware\Core\Framework\Snippet\Filter\SnippetFilterFactory"/>
        </service>

        <service id="Shopware\Core\Framework\Snippet\Api\SnippetController" public="true">
            <argument type="service" id="Shopware\Core\Framework\Snippet\SnippetService"/>
            <argument type="service" id="Shopware\Core\Framework\Snippet\Files\SnippetFileCollection"/>
        </service>

        <service id="Shopware\Core\Framework\Snippet\Files\SnippetFileCollection" public="true">
            <argument type="tagged" tag="shopware.snippet.file"/>
        </service>

        <service id="Shopware\Core\Framework\Snippet\Filter\SnippetFilterFactory" public="true">
            <argument type="tagged" tag="shopware.snippet.filter"/>
        </service>

        <!--SnippetFilters-->
        <service id="Shopware\Core\Framework\Snippet\Filter\AuthorFilter">
            <tag name="shopware.snippet.filter"/>
        </service>

        <service id="Shopware\Core\Framework\Snippet\Filter\AddedFilter">
            <tag name="shopware.snippet.filter"/>
        </service>

        <service id="Shopware\Core\Framework\Snippet\Filter\EditedFilter">
            <tag name="shopware.snippet.filter"/>
        </service>

        <service id="Shopware\Core\Framework\Snippet\Filter\EmptySnippetFilter">
            <tag name="shopware.snippet.filter"/>
        </service>

        <service id="Shopware\Core\Framework\Snippet\Filter\NamespaceFilter">
            <tag name="shopware.snippet.filter"/>
        </service>

        <service id="Shopware\Core\Framework\Snippet\Filter\TermFilter">
            <tag name="shopware.snippet.filter"/>
        </service>

        <service id="Shopware\Core\Framework\Snippet\Filter\TranslationKeyFilter">
            <tag name="shopware.snippet.filter"/>
        </service>

        <!-- Twig -->
        <service id="Shopware\Core\Framework\Twig\TemplateFinder" public="true">
            <argument type="service" id="twig"/>
            <argument type="service" id="twig.loader"/>
            <argument type="service" id="kernel"/>
        </service>

        <service id="Shopware\Core\Framework\Twig\InheritanceExtension">
            <argument type="service" id="Shopware\Core\Framework\Twig\TemplateFinder"/>
            <tag name="twig.extension"/>
        </service>

        <service id="Shopware\Core\Framework\Twig\FeatureFlagExtension">
            <tag name="twig.extension"/>
        </service>

        <service class="Twig_Extensions_Extension_Intl" id="twig.extension.intl">
            <tag name="twig.extension"/>
        </service>

        <service class="Twig_Extensions_Extension_Text" id="twig.extension.text">
            <tag name="twig.extension"/>
        </service>

        <service id="Shopware\Core\Framework\Twig\InstanceOfExtension">
            <tag name="twig.extension"/>
        </service>

        <service id="Shopware\Core\Framework\Twig\Filter\CurrencyFilter">
            <argument type="service" id="Shopware\Core\System\Currency\CurrencyFormatter"/>
            <tag name="twig.extension"/>
        </service>

        <service id="Shopware\Core\Framework\Twig\StringTemplateRenderer">
            <argument type="service" id="twig"/>
        </service>

        <service id="Shopware\Core\Framework\Routing\ApiRequestContextResolver">
            <argument type="service" id="Doctrine\DBAL\Connection"/>
        </service>

        <service id="Shopware\Core\Framework\Routing\SalesChannelRequestContextResolver"
                 decorates="Shopware\Core\Framework\Routing\ApiRequestContextResolver">
            <argument type="service" id="Shopware\Core\Framework\Routing\SalesChannelRequestContextResolver.inner"/>
            <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextService"/>
            <argument type="service" id="event_dispatcher"/>
        </service>

        <service id="Shopware\Core\Framework\Api\Controller\SalesChannelProxyController" public="true">
            <argument type="service" id="kernel"/>
            <argument type="service" id="sales_channel.repository"/>
            <argument type="service" id="Shopware\Core\Framework\Routing\SalesChannelRequestContextResolver"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="Shopware\Core\Framework\Routing\RouteScope">
            <tag name="shopware.route_scope"/>
        </service>

        <service id="Shopware\Core\Framework\Routing\ApiRouteScope">
            <tag name="shopware.route_scope"/>
        </service>

        <service id="Shopware\Core\Framework\Routing\SalesChannelApiRouteScope">
            <tag name="shopware.route_scope"/>
        </service>

        <service id="Shopware\Core\Framework\Routing\RouteScopeRegistry">
            <argument type="tagged" tag="shopware.route_scope"/>
        </service>

        <!-- Logging -->
        <service id="Shopware\Core\Framework\Logging\LoggingService">
            <argument>%kernel.environment%</argument>
            <tag name="kernel.event_subscriber"/>
            <argument type="service" id="monolog.logger.business_events"/>
        </service>

        <service id="Shopware\Core\Framework\Logging\Monolog\DoctrineSQLHandler">
            <argument type="service" id="Doctrine\DBAL\Connection"/>
        </service>

        <service id="Shopware\Core\Framework\Logging\LogEntryDefinition">
            <tag name="shopware.entity.definition" entity="log_entry"/>
        </service>

        <!-- Feature Flags -->
        <service id="Shopware\Core\Framework\FeatureFlag\FeatureFlagGenerator"/>

        <service id="Shopware\Core\Framework\FeatureFlag\Command\FeatureFlagCreateCommand">
            <argument type="service" id="Shopware\Core\Framework\FeatureFlag\FeatureFlagGenerator"/>

            <tag name="console.command"/>
        </service>

        <service id="Shopware\Core\Framework\Cache\CacheClearer">
            <argument type="collection">
                <argument type="service" id="cache.object" />
                <argument type="service" id="cache.http" />
            </argument>
            <argument type="service" id="cache_clearer"/>
            <argument type="service" id="filesystem"/>
            <argument>%kernel.cache_dir%</argument>
            <argument>%kernel.environment%</argument>
        </service>

        <!-- Util -->
        <service id="Shopware\Core\Framework\Log\LoggerFactory">
            <argument type="string">%kernel.logs_dir%/%%s_%kernel.environment%.log</argument>
        </service>

        <!--SnippetFiles-->
        <service id="Shopware\Core\Framework\Resources\snippet\de_DE\SnippetFile_de_DE" public="true">
            <tag name="shopware.snippet.file" priority="1000"/>
        </service>

        <service id="Shopware\Core\Framework\Resources\snippet\en_GB\SnippetFile_en_GB" public="true">
            <tag name="shopware.snippet.file" priority="1000"/>
        </service>
    </services>
</container>
