diff --git a/node_modules/tiny-slider/dist/tiny-slider.js b/node_modules/tiny-slider/dist/tiny-slider.js
index 1b5d912..8a167a1 100644
--- a/node_modules/tiny-slider/dist/tiny-slider.js
+++ b/node_modules/tiny-slider/dist/tiny-slider.js
@@ -563,7 +563,8 @@ var tns = function (options) {
     freezable: true,
     onInit: false,
     useLocalStorage: true,
-    nonce: false
+    nonce: false,
+    ariaLive: true,
   }, options || {});
   var doc = document,
       win = window,
@@ -1261,7 +1262,6 @@ var tns = function (options) {
       }
 
       setAttrs(item, {
-        'aria-hidden': 'true',
         'tabindex': '-1'
       });
     }); // ## clone slides
@@ -1567,8 +1567,11 @@ var tns = function (options) {
     // == slides ==
     updateSlideStatus(); // == live region ==
 
-    outerWrapper.insertAdjacentHTML('afterbegin', '<div class="tns-liveregion tns-visually-hidden" aria-live="polite" aria-atomic="true">slide <span class="current">' + getLiveRegionStr() + '</span>  of ' + slideCount + '</div>');
-    liveregionCurrent = outerWrapper.querySelector('.tns-liveregion .current'); // == autoplayInit ==
+    if (options.ariaLive) {
+      outerWrapper.insertAdjacentHTML('afterbegin', '<div class="tns-liveregion tns-visually-hidden" aria-live="polite" aria-atomic="true">slide <span class="current">' + getLiveRegionStr() + '</span>  of ' + slideCount + '</div>');
+      liveregionCurrent = outerWrapper.querySelector('.tns-liveregion .current');
+    }
+    // == autoplayInit ==
 
     if (hasAutoplay) {
       var txt = autoplay ? 'stop' : 'start';
@@ -1650,7 +1653,7 @@ var tns = function (options) {
       setAttrs(navItems[navCurrentIndex], {
         'aria-label': navStr + (navCurrentIndex + 1) + navStrCurrent
       });
-      removeAttrs(navItems[navCurrentIndex], 'tabindex');
+
       addClass(navItems[navCurrentIndex], navActiveClass); // add events
 
       addEvents(navContainer, navEvents);
@@ -2428,6 +2431,10 @@ var tns = function (options) {
   }
 
   function updateLiveRegion() {
+    if (!options.ariaLive) {
+      return;
+    }
+
     var str = getLiveRegionStr();
 
     if (liveregionCurrent.innerHTML !== str) {
@@ -2691,19 +2698,21 @@ var tns = function (options) {
         start = range[0],
         end = range[1];
     forEach(slideItems, function (item, i) {
+      if (item.classList.contains('tns-slide-cloned')) {
+          setAttrs(item, {
+              'aria-hidden': 'true',
+              'tabindex': '-1'
+          });
+      }
+
       // show slides
       if (i >= start && i <= end) {
-        if (hasAttr(item, 'aria-hidden')) {
-          removeAttrs(item, ['aria-hidden', 'tabindex']);
+        if (!item.classList.contains(slideActiveClass)) {
           addClass(item, slideActiveClass);
         } // hide slides
 
       } else {
-        if (!hasAttr(item, 'aria-hidden')) {
-          setAttrs(item, {
-            'aria-hidden': 'true',
-            'tabindex': '-1'
-          });
+        if (item.classList.contains(slideActiveClass)) {
           removeClass(item, slideActiveClass);
         }
       }
@@ -2759,7 +2768,7 @@ var tns = function (options) {
         setAttrs(navCurrent, {
           'aria-label': navStr + (navCurrentIndex + 1) + navStrCurrent
         });
-        removeAttrs(navCurrent, 'tabindex');
+
         addClass(navCurrent, navActiveClass);
         navCurrentIndexCached = navCurrentIndex;
       }
@@ -3483,14 +3492,14 @@ var tns = function (options) {
 
       if (!horizontal || fixedWidth || autoWidth) {
         x += dist;
-        x += 'px';
+        var xUnit = x + 'px';
       } else {
         var percentageX = TRANSFORM ? dist * items * 100 / ((viewport + gutter) * slideCountNew) : dist * 100 / (viewport + gutter);
         x += percentageX;
-        x += '%';
+        var xUnit = x + '%';
       }
 
-      container.style[transformAttr] = transformPrefix + x + transformPostfix;
+      container.style[transformAttr] = transformPrefix + xUnit + transformPostfix;
     }
   }
 
